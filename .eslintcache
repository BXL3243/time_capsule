[{"/Users/richard/Documents/GitHub/time_sapsule/src/index.tsx":"1","/Users/richard/Documents/GitHub/time_sapsule/src/serviceWorker.ts":"2","/Users/richard/Documents/GitHub/time_sapsule/src/state/store.ts":"3","/Users/richard/Documents/GitHub/time_sapsule/src/components/App.tsx":"4","/Users/richard/Documents/GitHub/time_sapsule/src/styles/GlobalStyles.tsx":"5","/Users/richard/Documents/GitHub/time_sapsule/src/state/userSlice.ts":"6","/Users/richard/Documents/GitHub/time_sapsule/src/state/tokenSlice.ts":"7","/Users/richard/Documents/GitHub/time_sapsule/src/services/tokenService.ts":"8","/Users/richard/Documents/GitHub/time_sapsule/src/components/ReceivedPage.tsx":"9","/Users/richard/Documents/GitHub/time_sapsule/src/components/SentPage.tsx":"10","/Users/richard/Documents/GitHub/time_sapsule/src/components/CapsulePage.tsx":"11","/Users/richard/Documents/GitHub/time_sapsule/src/components/Header.tsx":"12","/Users/richard/Documents/GitHub/time_sapsule/src/components/HomePage.tsx":"13","/Users/richard/Documents/GitHub/time_sapsule/src/components/Footer.tsx":"14","/Users/richard/Documents/GitHub/time_sapsule/src/services/contracthelper.ts":"15","/Users/richard/Documents/GitHub/time_sapsule/src/data/rinkebyTokens.ts":"16","/Users/richard/Documents/GitHub/time_sapsule/src/utils/globals.ts":"17","/Users/richard/Documents/GitHub/time_sapsule/src/components/Capsules.tsx":"18","/Users/richard/Documents/GitHub/time_sapsule/src/components/Loading.tsx":"19","/Users/richard/Documents/GitHub/time_sapsule/src/components/NoCapsules.tsx":"20","/Users/richard/Documents/GitHub/time_sapsule/src/components/CapsuleAssets.tsx":"21","/Users/richard/Documents/GitHub/time_sapsule/src/components/CapsuleOverview.tsx":"22","/Users/richard/Documents/GitHub/time_sapsule/src/components/CapsuleDetails.tsx":"23","/Users/richard/Documents/GitHub/time_sapsule/src/components/Connector.tsx":"24","/Users/richard/Documents/GitHub/time_sapsule/src/components/Button.tsx":"25","/Users/richard/Documents/GitHub/time_sapsule/src/components/Landing.tsx":"26","/Users/richard/Documents/GitHub/time_sapsule/src/components/SupportedNetworks.tsx":"27","/Users/richard/Documents/GitHub/time_sapsule/src/components/WhyUseSlide.tsx":"28","/Users/richard/Documents/GitHub/time_sapsule/src/components/TokenSlide.tsx":"29","/Users/richard/Documents/GitHub/time_sapsule/src/components/WhatIsSlide.tsx":"30","/Users/richard/Documents/GitHub/time_sapsule/src/services/web3Service.ts":"31","/Users/richard/Documents/GitHub/time_sapsule/src/services/dateHelper.ts":"32","/Users/richard/Documents/GitHub/time_sapsule/src/data/oracles.ts":"33","/Users/richard/Documents/GitHub/time_sapsule/src/services/oracleService.ts":"34","/Users/richard/Documents/GitHub/time_sapsule/src/components/AddAssets.tsx":"35","/Users/richard/Documents/GitHub/time_sapsule/src/components/Capsule.tsx":"36","/Users/richard/Documents/GitHub/time_sapsule/src/components/CreateCapsule.tsx":"37","/Users/richard/Documents/GitHub/time_sapsule/src/components/BlockContent.tsx":"38","/Users/richard/Documents/GitHub/time_sapsule/src/components/Countdown.tsx":"39","/Users/richard/Documents/GitHub/time_sapsule/src/components/UpdateBeneficiary.tsx":"40","/Users/richard/Documents/GitHub/time_sapsule/src/components/Block.tsx":"41","/Users/richard/Documents/GitHub/time_sapsule/src/components/FloatingCapsule.tsx":"42","/Users/richard/Documents/GitHub/time_sapsule/src/components/Note.tsx":"43","/Users/richard/Documents/GitHub/time_sapsule/src/components/Popup.tsx":"44","/Users/richard/Documents/GitHub/time_sapsule/src/components/Assets.tsx":"45","/Users/richard/Documents/GitHub/time_sapsule/src/components/TextInput.tsx":"46","/Users/richard/Documents/GitHub/time_sapsule/src/components/Selector.tsx":"47","/Users/richard/Documents/GitHub/time_sapsule/src/styles/ValidationError.tsx":"48","/Users/richard/Documents/GitHub/time_sapsule/src/components/Dropdown.tsx":"49","/Users/richard/Documents/GitHub/time_sapsule/src/components/Label.tsx":"50","/Users/richard/Documents/GitHub/time_sapsule/src/components/Input.tsx":"51","/Users/richard/Documents/GitHub/time_sapsule/src/components/TokenInput.tsx":"52","/Users/richard/Documents/GitHub/time_sapsule/src/components/TokenSelector.tsx":"53","/Users/richard/Documents/GitHub/time_sapsule/src/components/Tooltip.tsx":"54"},{"size":507,"mtime":1624075299000,"results":"55","hashOfConfig":"56"},{"size":5460,"mtime":1624075299000,"results":"57","hashOfConfig":"56"},{"size":455,"mtime":1624075299000,"results":"58","hashOfConfig":"56"},{"size":1651,"mtime":1624075299000,"results":"59","hashOfConfig":"56"},{"size":786,"mtime":1624075299000,"results":"60","hashOfConfig":"56"},{"size":588,"mtime":1624075299000,"results":"61","hashOfConfig":"56"},{"size":603,"mtime":1624075299000,"results":"62","hashOfConfig":"56"},{"size":726,"mtime":1624075299000,"results":"63","hashOfConfig":"56"},{"size":1261,"mtime":1624075299000,"results":"64","hashOfConfig":"56"},{"size":1200,"mtime":1624075299000,"results":"65","hashOfConfig":"56"},{"size":2500,"mtime":1624075299000,"results":"66","hashOfConfig":"56"},{"size":1461,"mtime":1624075299000,"results":"67","hashOfConfig":"56"},{"size":594,"mtime":1624075299000,"results":"68","hashOfConfig":"56"},{"size":1441,"mtime":1625585581712,"results":"69","hashOfConfig":"56"},{"size":7390,"mtime":1624075299000,"results":"70","hashOfConfig":"56"},{"size":1037,"mtime":1624075299000,"results":"71","hashOfConfig":"56"},{"size":1198,"mtime":1625585581725,"results":"72","hashOfConfig":"56"},{"size":1025,"mtime":1624075299000,"results":"73","hashOfConfig":"56"},{"size":334,"mtime":1624075299000,"results":"74","hashOfConfig":"56"},{"size":1812,"mtime":1624075299000,"results":"75","hashOfConfig":"56"},{"size":4089,"mtime":1624075299000,"results":"76","hashOfConfig":"56"},{"size":2898,"mtime":1624075299000,"results":"77","hashOfConfig":"56"},{"size":3478,"mtime":1624075299000,"results":"78","hashOfConfig":"56"},{"size":1102,"mtime":1624075299000,"results":"79","hashOfConfig":"56"},{"size":1942,"mtime":1624075299000,"results":"80","hashOfConfig":"56"},{"size":3047,"mtime":1624075299000,"results":"81","hashOfConfig":"56"},{"size":3151,"mtime":1624075299000,"results":"82","hashOfConfig":"56"},{"size":3716,"mtime":1624075299000,"results":"83","hashOfConfig":"56"},{"size":1890,"mtime":1624075299000,"results":"84","hashOfConfig":"56"},{"size":1271,"mtime":1624075299000,"results":"85","hashOfConfig":"56"},{"size":1080,"mtime":1625582790935,"results":"86","hashOfConfig":"56"},{"size":1652,"mtime":1624075299000,"results":"87","hashOfConfig":"56"},{"size":8639,"mtime":1624075299000,"results":"88","hashOfConfig":"56"},{"size":1687,"mtime":1624075299000,"results":"89","hashOfConfig":"56"},{"size":3105,"mtime":1624075299000,"results":"90","hashOfConfig":"56"},{"size":3730,"mtime":1624075299000,"results":"91","hashOfConfig":"56"},{"size":10496,"mtime":1624075299000,"results":"92","hashOfConfig":"56"},{"size":1261,"mtime":1624075299000,"results":"93","hashOfConfig":"56"},{"size":1482,"mtime":1624075299000,"results":"94","hashOfConfig":"56"},{"size":1958,"mtime":1624075299000,"results":"95","hashOfConfig":"56"},{"size":2879,"mtime":1624075299000,"results":"96","hashOfConfig":"56"},{"size":4018,"mtime":1624075299000,"results":"97","hashOfConfig":"56"},{"size":946,"mtime":1624075299000,"results":"98","hashOfConfig":"56"},{"size":3281,"mtime":1624075299000,"results":"99","hashOfConfig":"56"},{"size":1992,"mtime":1624075299000,"results":"100","hashOfConfig":"56"},{"size":767,"mtime":1624075299000,"results":"101","hashOfConfig":"56"},{"size":1168,"mtime":1624075299000,"results":"102","hashOfConfig":"56"},{"size":262,"mtime":1624075299000,"results":"103","hashOfConfig":"56"},{"size":1187,"mtime":1624075299000,"results":"104","hashOfConfig":"56"},{"size":613,"mtime":1624075299000,"results":"105","hashOfConfig":"56"},{"size":845,"mtime":1624075299000,"results":"106","hashOfConfig":"56"},{"size":4509,"mtime":1624075299000,"results":"107","hashOfConfig":"56"},{"size":3056,"mtime":1624075299000,"results":"108","hashOfConfig":"56"},{"size":2083,"mtime":1624075299000,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rgr7iv",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","errorCount":15,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/richard/Documents/GitHub/time_sapsule/src/index.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/serviceWorker.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/state/store.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/App.tsx",["224"],"import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ReceivedPage from \"./ReceivedPage\";\r\nimport SentPage from \"./SentPage\";\r\nimport HomePage from \"./HomePage\";\r\nimport { getTokens } from \"../services/tokenService\";\r\nimport { setTokens } from \"../state/tokenSlice\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport CapsulePage from \"./CapsulePage\";\r\n\r\nconst StyledApp = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  background-color: var(--bg);\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst App = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const updateTokens = async () => {\r\n    const tokens = await getTokens();\r\n    dispatch(setTokens(tokens));\r\n  };\r\n\r\n  const init = async () => {\r\n    updateTokens();\r\n\r\n    (window as any).ethereum.on(\"chainChanged\", async () => {\r\n      await updateTokens();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n    <StyledApp>\r\n      <Router>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/sent\">\r\n            <SentPage />\r\n          </Route>\r\n          <Route path=\"/received\">\r\n            <ReceivedPage />\r\n          </Route>\r\n          <Route path=\"/capsule/:capsuleId\">\r\n            <CapsulePage />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <HomePage />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </StyledApp>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","/Users/richard/Documents/GitHub/time_sapsule/src/styles/GlobalStyles.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/state/userSlice.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/state/tokenSlice.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/services/tokenService.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/ReceivedPage.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/SentPage.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/CapsulePage.tsx",["225"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport { getAddress, getCapsule } from \"../services/contracthelper\";\nimport { setAddress } from \"../state/userSlice\";\nimport CapsuleType from \"../types/CapsuleType\";\n\nimport noise from \"../assets/noise.png\";\n\nimport Loading from \"./Loading\";\nimport CapsuleOverview from \"./CapsuleOverview\";\nimport CapsuleDetails from \"./CapsuleDetails\";\nimport CapsuleAssets from \"./CapsuleAssets\";\n\nconst StyledCapsulePage = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nconst Gradient = styled.div`\n  position: absolute;\n  top: -13rem;\n  left: 0;\n  width: 100%;\n  height: calc(100% + 13rem + 11rem);\n  background: linear-gradient(\n    90deg,\n    var(--bg),\n    var(--sub),\n    var(--bg),\n    var(--bg)\n  );\n  opacity: 0.5;\n`;\n\nconst Noise = styled.div`\n  position: absolute;\n  top: -13rem;\n  left: 0;\n  width: 100%;\n  height: calc(100% + 13rem + 11rem);\n  background-image: url(${noise});\n  background-size: 5px 5px;\n  opacity: 1;\n`;\n\nconst CapsulePageContent = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  min-height: 77vh;\n  align-items: center;\n  justify-content: space-evenly;\n\n  @media (max-width: 600px) {\n    flex-direction: column;\n    margin: 6rem 0;\n  }\n`;\n\nconst Details = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst CapsulePage = (): JSX.Element => {\n  const dispatch = useDispatch();\n\n  const { capsuleId } = useParams<any>();\n  const [capsule, setCapsule] = useState<CapsuleType | null>(null);\n\n  const updateCapsule = async () => {\n    dispatch(setAddress(await getAddress()));\n    setCapsule(await getCapsule(capsuleId));\n  };\n\n  useEffect(() => {\n    updateCapsule();\n\n    (window as any).ethereum.on(\"chainChanged\", async () => {\n      await updateCapsule();\n    });\n  }, []);\n\n  return (\n    <StyledCapsulePage>\n      <Noise />\n      <Gradient />\n      <CapsulePageContent>\n        {!capsule && <Loading />}\n        {capsule && (\n          <CapsuleOverview capsule={capsule} update={() => updateCapsule()} />\n        )}\n        {capsule && (\n          <Details>\n            <CapsuleDetails capsule={capsule} update={() => updateCapsule()} />\n            <CapsuleAssets capsule={capsule} update={() => updateCapsule()} />\n          </Details>\n        )}\n      </CapsulePageContent>\n    </StyledCapsulePage>\n  );\n};\n\nexport default CapsulePage;\n","/Users/richard/Documents/GitHub/time_sapsule/src/components/Header.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/HomePage.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Footer.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/services/contracthelper.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/data/rinkebyTokens.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/utils/globals.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Capsules.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Loading.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/NoCapsules.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/CapsuleAssets.tsx",["226"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { getAssetRealValue, getAssetSymbol } from \"../services/contracthelper\";\nimport { selectAddress } from \"../state/userSlice\";\nimport CapsuleType, { Asset } from \"../types/CapsuleType\";\n\nimport Button from \"./Button\";\nimport AddAssets from \"./AddAssets\";\nimport BlockContent from \"./BlockContent\";\n\nconst Header = styled.div`\n  font-size: 5rem;\n  margin-bottom: 2rem;\n  color: var(--main);\n  text-align: center;\n  transform: rotate(-4deg);\n  margin-top: -1rem;\n`;\n\nconst SubHeaderMain = styled.span`\n  font-size: 2.5rem;\n  color: var(--main);\n  margin-right: 1rem;\n`;\n\nconst AssetContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem 0;\n`;\n\nconst TokenContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 6rem;\n`;\n\nconst TokenAddress = styled.div`\n  font-size: 2rem;\n  color: var(--sub);\n`;\n\ntype AssetValue = {\n  asset: string;\n  value: number;\n};\n\ntype AssetSymbol = {\n  asset: string;\n  symbol: string;\n};\n\ntype Props = {\n  capsule: CapsuleType;\n  update: () => void;\n};\n\nconst CapsuleAssets = (props: Props): JSX.Element => {\n  const address = useSelector(selectAddress);\n\n  const [addingAssets, setAddingAssets] = useState(false);\n  const [assetValues, setAssetValues] = useState<AssetValue[]>([]);\n  const [assetSymbols, setAssetSymbols] = useState<AssetSymbol[]>([]);\n\n  const isOpen = !props.capsule\n    ? false\n    : new Date(props.capsule.distributionDate).getTime() < new Date().getTime();\n\n  const updateAssets = async () => {\n    const _assetValues: AssetValue[] = [];\n    const valuePromises = props.capsule.assets.map(async (asset: Asset) => {\n      const realValue = await getAssetRealValue(asset);\n      _assetValues.push({\n        asset: asset.token,\n        value: realValue,\n      });\n    });\n\n    const _assetSymbols: AssetSymbol[] = [];\n    const symbolPromises = props.capsule.assets.map(async (asset: Asset) => {\n      const _symbol = await getAssetSymbol(asset.token);\n      _assetSymbols.push({\n        asset: asset.token,\n        symbol: _symbol,\n      });\n    });\n\n    await Promise.all(valuePromises);\n    setAssetValues(_assetValues);\n    await Promise.all(symbolPromises);\n    setAssetSymbols(_assetSymbols);\n  };\n\n  useEffect(() => {\n    updateAssets();\n  }, []);\n\n  return (\n    <>\n      <BlockContent\n        content={\n          <>\n            <Header>Capsule Assets</Header>\n            {props.capsule.assets.map((asset: Asset) => (\n              <AssetContainer>\n                <TokenContainer>\n                  <SubHeaderMain>\n                    {assetSymbols.length === props.capsule.assets.length\n                      ? assetSymbols.filter(\n                          (as: AssetSymbol) => as.asset === asset.token\n                        )[0].symbol\n                      : \"---\"}\n                  </SubHeaderMain>\n                  {asset.token !== \"ETH\" && (\n                    <TokenAddress>{asset.token}</TokenAddress>\n                  )}\n                </TokenContainer>\n                <SubHeaderMain>\n                  {assetValues.length === props.capsule.assets.length\n                    ? assetValues.filter(\n                        (av: AssetValue) => av.asset === asset.token\n                      )[0].value\n                    : \"---\"}\n                </SubHeaderMain>\n              </AssetContainer>\n            ))}\n            {props.capsule.grantor === address &&\n              props.capsule.addingAssetsAllowed &&\n              !isOpen && (\n                <Button\n                  primary\n                  text=\"Add Assets\"\n                  click={() => setAddingAssets(true)}\n                />\n              )}\n          </>\n        }\n      />\n      <AddAssets\n        capsuleId={props.capsule.id}\n        show={addingAssets}\n        close={() => setAddingAssets(false)}\n        updateCapsules={() => props.update()}\n      />\n    </>\n  );\n};\n\nexport default CapsuleAssets;\n","/Users/richard/Documents/GitHub/time_sapsule/src/components/CapsuleOverview.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/CapsuleDetails.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Connector.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Button.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Landing.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/SupportedNetworks.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/WhyUseSlide.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/TokenSlide.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/WhatIsSlide.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/services/web3Service.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/services/dateHelper.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/data/oracles.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/services/oracleService.ts",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/AddAssets.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Capsule.tsx",["227","228","229"],"import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport countdown from \"countdown\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport capsuleOpenSmall from \"../assets/capsule-open-small.png\";\nimport capsuleLockedSmall from \"../assets/capsule-locked-small.png\";\nimport capsuleReadySmall from \"../assets/capsule-ready-small.png\";\n\nimport Button from \"./Button\";\nimport CapsuleType, { Asset } from \"../types/CapsuleType\";\nimport { selectTokens } from \"../state/tokenSlice\";\nimport Token from \"../types/Token\";\nimport { getCapsuleUsdValue } from \"../services/oracleService\";\nimport BlockContent from \"./BlockContent\";\nimport Countdown from \"./Countdown\";\nimport { getCanBeOpened } from \"../services/dateHelper\";\n\nconst Content = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 27rem;\n`;\n\nconst Dollars = styled.div`\n  color: var(--main);\n  font-size: 4rem;\n  font-weight: 500;\n  margin-bottom: 1rem;\n  text-align: right;\n`;\n\nconst Image = styled.img`\n  height: 15rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  color: var(--main);\n  text-transform: uppercase;\n  transform: translateX(-1rem);\n  margin-bottom: 1rem;\n`;\n\nconst Crypto = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n`;\n\nconst CyptoIconContainer = styled.div`\n  width: 1.3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CryptoIcon = styled.img`\n  background-color: white;\n  border-radius: 50%;\n  width: 2rem;\n`;\n\ntype Props = {\n  capsule: CapsuleType;\n};\n\nconst Capsule = (props: Props): JSX.Element => {\n  const history = useHistory();\n\n  const tokens = useSelector(selectTokens);\n\n  const [usd, setUsd] = useState(\"$0\");\n\n  const canBeOpened = getCanBeOpened(props.capsule);\n\n  const getUsd = async () => {\n    const usdValue = await getCapsuleUsdValue(props.capsule);\n    setUsd(`$${Number(usdValue).toFixed(0).toLocaleString()}`);\n  };\n\n  useEffect(() => {\n    getUsd();\n  }, []);\n\n  return (\n    <>\n      <BlockContent\n        content={\n          <Content>\n            {usd !== \"$0\" && <Dollars>{`${usd}`}</Dollars>}\n            <Image\n              src={\n                props.capsule.empty\n                  ? capsuleOpenSmall\n                  : !canBeOpened\n                  ? capsuleLockedSmall\n                  : capsuleReadySmall\n              }\n              alt={\n                props.capsule.empty\n                  ? \"Capsule Empty Image\"\n                  : !canBeOpened\n                  ? \"Capsule Locked Image\"\n                  : \"Capsule Ready Image\"\n              }\n            />\n            <Countdown capsule={props.capsule} short />\n            <Crypto>\n              {props.capsule.assets.map((asset: Asset) => (\n                <CyptoIconContainer key={asset.token}>\n                  <CryptoIcon\n                    src={\n                      tokens.filter(\n                        (token: Token) => token.address === asset.token\n                      )[0]?.logoURI\n                    }\n                    alt={`${\n                      tokens.filter(\n                        (token: Token) => token.address === asset.token\n                      )[0]?.symbol\n                    } Token Image`}\n                  />\n                </CyptoIconContainer>\n              ))}\n            </Crypto>\n            <Button\n              click={() => history.push(`/capsule/${props.capsule.id}`)}\n              text=\"View Capsule\"\n            />\n          </Content>\n        }\n        marginBottom=\"2rem\"\n      />\n    </>\n  );\n};\n\nexport default Capsule;\n","/Users/richard/Documents/GitHub/time_sapsule/src/components/CreateCapsule.tsx",["230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"import React, { useState } from \"react\";\nimport BN from \"bn.js\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { gtag } from \"@deptno/gtag\";\nimport lockedCapsule from \"../assets/capsule-locked-large.png\";\n\nimport {\n  createCapsule,\n  getAssetLongValue,\n  getTokenContract,\n  tokenApproved,\n} from \"../services/contracthelper\";\nimport { getPeriodSize, inputToDate } from \"../services/dateHelper\";\nimport { selectTokens } from \"../state/tokenSlice\";\nimport { Asset } from \"../types/CapsuleType\";\nimport Token from \"../types/Token\";\nimport Assets from \"./Assets\";\nimport TextInput from \"./TextInput\";\nimport Popup from \"./Popup\";\nimport { ValidationError } from \"../styles/ValidationError\";\nimport Selector from \"./Selector\";\nimport Dropdown from \"./Dropdown\";\nimport { getGlobals } from \"../utils/globals\";\n\ntype Approval = {\n  asset: Asset;\n  approved: boolean;\n};\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\ntype Props = {\n  show: boolean;\n  close: () => void;\n};\n\nconst CreateCapsule = (props: Props): JSX.Element => {\n  if (!props.show) return <></>;\n\n  const history = useHistory();\n\n  const ethAsset: Asset = { token: \"ETH\", value: \"0\" };\n  const approval: Approval = { asset: ethAsset, approved: true };\n\n  const [loading, setLoading] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [beneficiary, setBeneficiary] = useState(\"\");\n  const [distributionDate, setDistributionDate] = useState(\"\");\n  const [periodType, setPeriodType] = useState(\"immediate\");\n  const [distributionFrequency, setDistributionFrequency] = useState(\"monthly\");\n  const [distributionPeriods, setDistributionPeriods] = useState(\"\");\n  const [distributionDateError, setDistributionDateError] = useState(\"\");\n  const [addingAssetsAllowed, setAddingAssetsAllowed] = useState(\"yes\");\n  const [addressError, setAddressError] = useState(\"\");\n  const [distributionPeriodsError, setDistributionPeriodsError] = useState(\"\");\n  const [assets, setAssets] = useState<Asset[]>([ethAsset]);\n  const [approvals, setApprovals] = useState<Approval[]>([approval]);\n\n  const tokens = useSelector(selectTokens);\n\n  const unapproved = approvals.filter((a: Approval) => !a.approved);\n\n  const addressSymbol = (address: string) =>\n    tokens.filter((token: Token) => token.address === address)[0].symbol;\n\n  const updateApprovals = async (assets: Asset[]) => {\n    const _approvals: Approval[] = [];\n    const promises = assets.map(async (asset: Asset) => {\n      _approvals.push({\n        asset,\n        approved: await tokenApproved(asset.token),\n      });\n    });\n    await Promise.all(promises);\n    setApprovals(_approvals);\n  };\n\n  const tokenApprove = async (address: string) => {\n    const globals = await getGlobals();\n    const tokenContract = await getTokenContract(address);\n    tokenContract.methods\n      .approve(globals.CAPSULE, new BN(\"9999999999999999999999999999\"))\n      .send()\n      .on(\"transactionHash\", (hash: any) => {\n        setLoading(true);\n      })\n      .on(\"receipt\", async (receipt: any) => {\n        await updateApprovals(assets);\n        setLoading(false);\n      })\n      .on(\"error\", (err: any) => {\n        console.log(`Error: ${err}`);\n        setLoading(false);\n      });\n  };\n\n  const create = async () => {\n    if (!validate()) return;\n\n    setLoading(true);\n\n    const _assets: Asset[] = [];\n\n    const promises: Promise<void>[] = assets.map(async (asset: Asset) => {\n      _assets.push({\n        token: asset.token,\n        value: await getAssetLongValue(\n          Number.parseFloat(asset.value),\n          asset.token\n        ),\n      });\n    });\n\n    await Promise.all(promises);\n\n    const date = inputToDate(distributionDate);\n    await createCapsule(\n      beneficiary,\n      date,\n      getPeriodSize(distributionFrequency),\n      periodType === \"immediate\" ? 1 : Number(distributionPeriods),\n      _assets,\n      addingAssetsAllowed === \"yes\"\n    );\n\n    gtag(\"event\", \"created\");\n    gtag(\"event\", \"conversion\");\n    setComplete(true);\n  };\n\n  const isValid = (): boolean =>\n    !addressError && !distributionPeriodsError && !distributionDateError;\n\n  const validate = (): boolean => {\n    const dateValid = validateDate(distributionDate);\n    const addressValid = validateAddress(beneficiary);\n    const periodsValid =\n      periodType === \"immediate\" ? true : validatePeriods(distributionPeriods);\n    return dateValid && addressValid && periodsValid;\n  };\n\n  const validateDate = (value: string): boolean => {\n    try {\n      const items = value.split(\"/\");\n      const newDate = new Date(`${items[2]}/${items[0]}/${items[1]}`);\n      const now = new Date();\n      if (items.length !== 3) setDistributionDateError(\"Incorrect Date format\");\n      else if (newDate < now)\n        setDistributionDateError(\"Date must be in future\");\n      else {\n        setDistributionDateError(\"\");\n        return true;\n      }\n    } catch {\n      setDistributionDateError(\"Incorrect Date format\");\n    }\n    return false;\n  };\n\n  const validateAddress = (value: string): boolean => {\n    if (value.length !== 42) setAddressError(\"Invalid Address\");\n    else {\n      setAddressError(\"\");\n      return true;\n    }\n    return false;\n  };\n\n  const validatePeriods = (value: string): boolean => {\n    let periods = 0;\n    try {\n      periods = Number(value);\n      if (periods <= 0)\n        setDistributionPeriodsError(\"Periods must be a positive number\");\n      else if (periods === 1)\n        setDistributionPeriodsError(\n          \"For only one period, use an Immediate Capsule\"\n        );\n      else {\n        setDistributionPeriodsError(\"\");\n        return true;\n      }\n    } catch {\n      setDistributionPeriodsError(\"Invalid Number\");\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <Popup\n        show={!complete}\n        close={props.close}\n        header=\"Create Capsule\"\n        content={\n          <Content>\n            <Selector\n              options={[\"immediate\", \"staggered\"]}\n              activeOption={periodType}\n              setOption={(option: string) => {\n                setPeriodType(option);\n                setDistributionPeriodsError(\"\");\n              }}\n              label=\"Distribution Type\"\n              tooltip=\"An Immediate Capsule will open completely on the distribution date, allowing all crypto to be accessed at once. A Staggered Capsule will first open on the Distribution Start Date for a portion of the crypto, and more crypto will become accessible at the defined intervals\"\n            />\n            <TextInput\n              label={\n                periodType === \"immediate\"\n                  ? \"Distribution Date\"\n                  : \"Distribution Start Date\"\n              }\n              placeholder=\"mm/dd/yyyy\"\n              tooltip={\n                periodType === \"immediate\"\n                  ? \"This is the date when the capsule will be able to be opened\"\n                  : \"This is the date when the capsule will first be able to be opened\"\n              }\n              value={distributionDate}\n              setValue={(value: string) => {\n                validateDate(value);\n                setDistributionDate(value);\n              }}\n            />\n            {distributionDateError && (\n              <ValidationError>{distributionDateError}</ValidationError>\n            )}\n            {periodType === \"staggered\" && (\n              <>\n                <Dropdown\n                  label=\"Distribution Frequency\"\n                  tooltip=\"How often the crypto should be distributed to the beneficiary after the capsule is opened\"\n                  options={[\"daily\", \"weekly\", \"monthly\", \"annually\"]}\n                  activeOption={distributionFrequency}\n                  setOption={(option: string) =>\n                    setDistributionFrequency(option)\n                  }\n                />\n                <TextInput\n                  label=\"Distribution Periods\"\n                  placeholder=\"e.g. 12\"\n                  tooltip=\"How many periods the crypto should be spread out over for the staggerd distribution\"\n                  value={distributionPeriods}\n                  setValue={(value: string) => {\n                    validatePeriods(value);\n                    setDistributionPeriods(value);\n                  }}\n                />\n                {distributionPeriodsError && (\n                  <ValidationError>{distributionPeriodsError}</ValidationError>\n                )}\n              </>\n            )}\n            <TextInput\n              label=\"Beneficiary\"\n              placeholder=\"e.g. 0x07d48BDBA7975f0DAF73BD5b85A2E3Ff87ffb24e\"\n              tooltip=\"This is the wallet address that your crypto will be sent to on the distribution date\"\n              value={beneficiary}\n              setValue={(value: string) => {\n                validateAddress(value);\n                setBeneficiary(value);\n              }}\n            />\n            {addressError && <ValidationError>{addressError}</ValidationError>}\n            <Selector\n              options={[\"yes\", \"no\"]}\n              activeOption={addingAssetsAllowed}\n              setOption={(option: string) => setAddingAssetsAllowed(option)}\n              label=\"Adding Assets Allowed\"\n              tooltip=\"Controls if you are able to continue to add assets to the capsule after it has been created. 'Yes' will mean you can keep adding assets after it has been created. 'No' means that you can only add assets once when it is created.\"\n            />\n            <Assets\n              assets={assets}\n              setAssets={(assets: Asset[]) => {\n                setAssets(assets);\n                updateApprovals(assets);\n              }}\n            />\n          </Content>\n        }\n        buttonText={\n          unapproved.length === 0\n            ? \"Create\"\n            : `Approve ${addressSymbol(unapproved[0].asset.token)}`\n        }\n        buttonAction={() => {\n          if (unapproved.length === 0) create();\n          else tokenApprove(unapproved[0].asset.token);\n        }}\n        loading={loading}\n        buttonDisabled={!isValid()}\n      />\n      <Popup\n        show={complete}\n        close={props.close}\n        header=\"Capsule Created!\"\n        image={lockedCapsule}\n        body=\"Click below to view your capsule\"\n        buttonText=\"View Capsule\"\n        buttonAction={() => history.push(\"/sent\")}\n      />\n    </>\n  );\n};\n\nexport default CreateCapsule;\n","/Users/richard/Documents/GitHub/time_sapsule/src/components/BlockContent.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Countdown.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/UpdateBeneficiary.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Block.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/FloatingCapsule.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Note.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Popup.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Assets.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/TextInput.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Selector.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/styles/ValidationError.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Dropdown.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Label.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Input.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/TokenInput.tsx",["245"],"import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ethBalance, tokenBalance } from \"../services/contracthelper\";\nimport { toCents } from \"../services/web3Service\";\nimport Input from \"./Input\";\nimport { ValidationError } from \"../styles/ValidationError\";\nimport Token from \"../types/Token\";\nimport TokenSelector from \"./TokenSelector\";\n\nconst StyledTokenInput = styled.div`\n  border-radius: 2rem;\n  display: flex;\n  padding-top: 1rem;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  padding: 1rem;\n  border: solid 2px var(--main);\n  align-items: center;\n  width: 13rem;\n  position: relative;\n  margin-right: 3rem;\n  height: 4.8rem;\n`;\n\nconst OpenButton = styled.button`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  cursor: pointer;\n`;\n\nconst Image = styled.img`\n  height: 1.6rem;\n  margin-right: 1rem;\n  background-color: var(--bg);\n  border-radius: 50%;\n`;\n\nconst Name = styled.div`\n  color: var(--main);\n  font-size: 1.6rem;\n  font-weight: 500;\n  margin-right: 1rem;\n`;\n\nconst Arrow = styled.div`\n  font-size: 2rem;\n  color: var(--main);\n  position: absolute;\n  font-weight: 200;\n  font-family: Arial, Helvetica, sans-serif;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%) rotate(90deg);\n`;\n\nconst InputContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst MaxButton = styled.button`\n  font-size: 1.9rem;\n  text-transform: uppercase;\n  color: var(--primary);\n  font-weight: 600;\n  position: absolute;\n  right: 1rem;\n  top: 1.4rem;\n  cursor: pointer;\n  height: 2rem;\n  background-color: var(--bg);\n  padding: 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst RemoveAsset = styled.button`\n  font-size: 1.9rem;\n  font-weight: 500;\n  color: var(--primary);\n  text-decoration: underline;\n  width: 9rem;\n  cursor: pointer;\n  margin-left: 1rem;\n`;\n\ntype Props = {\n  token: Token;\n  setToken: (token: Token, value: string) => void;\n  removeToken: () => void;\n  removable: boolean;\n};\n\nconst TokenInput = (props: Props): JSX.Element => {\n  const tokenContainerRef = useRef<HTMLDivElement>(null);\n\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"0\");\n  const [balance, setBalance] = useState(0);\n  const [error, setError] = useState(\"\");\n\n  const updateBalance = async (token: Token) => {\n    if (token.address === \"ETH\") {\n      const _balance = await ethBalance();\n      setBalance(_balance);\n    } else {\n      const _balance = await tokenBalance(token);\n      setBalance(_balance);\n    }\n  };\n\n  const setToken = (\n    token: Token,\n    valueString: string,\n    isTokenChange: boolean\n  ) => {\n    setError(\"\");\n    if (!isTokenChange) {\n      let number = \"0\";\n      try {\n        number = toCents(Number.parseFloat(valueString), token);\n      } catch {\n        setError(\"Not a valid number\");\n        return;\n      }\n      if (Number.parseFloat(number) === 0) {\n        setError(\"Value must be greater than 0\");\n        return;\n      }\n      if (Number.parseFloat(valueString) > balance) {\n        setError(\"Value must be less than or equal to balance\");\n        return;\n      }\n    }\n    props.setToken(token, valueString);\n  };\n\n  useEffect(() => {\n    updateBalance(props.token);\n  }, []);\n\n  return (\n    <StyledTokenInput>\n      <Container ref={tokenContainerRef}>\n        <Image\n          src={props.token.logoURI}\n          alt={`${props.token.symbol} Token Image`}\n        />\n        <Name>{props.token.symbol}</Name>\n        <Arrow>{\">\"}</Arrow>\n        <OpenButton onClick={() => setOpen(true)} />\n        <TokenSelector\n          open={open}\n          token={props.token}\n          setToken={(token: Token) => {\n            setToken(token, value, true);\n            updateBalance(token);\n            setOpen(false);\n          }}\n          parent={tokenContainerRef.current}\n        />\n      </Container>\n      <InputContainer>\n        <Input\n          placeholder=\"0.0\"\n          value={value}\n          setValue={(v: string) => {\n            setValue(v);\n            setToken(props.token, v, false);\n          }}\n        />\n        <MaxButton onClick={() => setValue(balance.toString())}>max</MaxButton>\n        {error && <ValidationError spacing>{error}</ValidationError>}\n      </InputContainer>\n      {props.removable && (\n        <RemoveAsset onClick={() => props.removeToken()}>Remove</RemoveAsset>\n      )}\n    </StyledTokenInput>\n  );\n};\n\nexport default TokenInput;\n","/Users/richard/Documents/GitHub/time_sapsule/src/components/TokenSelector.tsx",[],"/Users/richard/Documents/GitHub/time_sapsule/src/components/Tooltip.tsx",[],{"ruleId":"246","severity":1,"message":"247","line":42,"column":6,"nodeType":"248","endLine":42,"endColumn":8,"suggestions":"249"},{"ruleId":"246","severity":1,"message":"250","line":86,"column":6,"nodeType":"248","endLine":86,"endColumn":8,"suggestions":"251"},{"ruleId":"246","severity":1,"message":"252","line":100,"column":6,"nodeType":"248","endLine":100,"endColumn":8,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":1,"column":28,"nodeType":"256","messageId":"257","endLine":1,"endColumn":34},{"ruleId":"254","severity":1,"message":"258","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":17},{"ruleId":"246","severity":1,"message":"259","line":88,"column":6,"nodeType":"248","endLine":88,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":2,"message":"262","line":46,"column":19,"nodeType":"256","endLine":46,"endColumn":29},{"ruleId":"261","severity":2,"message":"263","line":51,"column":33,"nodeType":"256","endLine":51,"endColumn":41},{"ruleId":"261","severity":2,"message":"263","line":52,"column":35,"nodeType":"256","endLine":52,"endColumn":43},{"ruleId":"261","severity":2,"message":"263","line":53,"column":41,"nodeType":"256","endLine":53,"endColumn":49},{"ruleId":"261","severity":2,"message":"263","line":54,"column":51,"nodeType":"256","endLine":54,"endColumn":59},{"ruleId":"261","severity":2,"message":"263","line":55,"column":39,"nodeType":"256","endLine":55,"endColumn":47},{"ruleId":"261","severity":2,"message":"263","line":56,"column":61,"nodeType":"256","endLine":56,"endColumn":69},{"ruleId":"261","severity":2,"message":"263","line":57,"column":57,"nodeType":"256","endLine":57,"endColumn":65},{"ruleId":"261","severity":2,"message":"263","line":58,"column":61,"nodeType":"256","endLine":58,"endColumn":69},{"ruleId":"261","severity":2,"message":"263","line":59,"column":57,"nodeType":"256","endLine":59,"endColumn":65},{"ruleId":"261","severity":2,"message":"263","line":60,"column":43,"nodeType":"256","endLine":60,"endColumn":51},{"ruleId":"261","severity":2,"message":"263","line":61,"column":67,"nodeType":"256","endLine":61,"endColumn":75},{"ruleId":"261","severity":2,"message":"263","line":62,"column":31,"nodeType":"256","endLine":62,"endColumn":39},{"ruleId":"261","severity":2,"message":"263","line":63,"column":37,"nodeType":"256","endLine":63,"endColumn":45},{"ruleId":"261","severity":2,"message":"264","line":65,"column":18,"nodeType":"256","endLine":65,"endColumn":29},{"ruleId":"246","severity":1,"message":"265","line":148,"column":6,"nodeType":"248","endLine":148,"endColumn":8,"suggestions":"266"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["267"],"React Hook useEffect has a missing dependency: 'updateCapsule'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'updateAssets'. Either include it or remove the dependency array.",["269"],"@typescript-eslint/no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'countdown' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsd'. Either include it or remove the dependency array.",["270"],"react-hooks/rules-of-hooks","React Hook \"useHistory\" is called conditionally. React Hooks must be called in the exact same order in every component render.","React Hook \"useState\" is called conditionally. React Hooks must be called in the exact same order in every component render.","React Hook \"useSelector\" is called conditionally. React Hooks must be called in the exact same order in every component render.","React Hook useEffect has a missing dependency: 'props.token'. Either include it or remove the dependency array.",["271"],{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [init]",{"range":"282","text":"283"},"Update the dependencies array to be: [updateCapsule]",{"range":"284","text":"285"},"Update the dependencies array to be: [updateAssets]",{"range":"286","text":"287"},"Update the dependencies array to be: [getUsd]",{"range":"288","text":"289"},"Update the dependencies array to be: [props.token]",{"range":"290","text":"291"},[1120,1122],"[init]",[1928,1930],"[updateCapsule]",[2436,2438],"[updateAssets]",[2129,2131],"[getUsd]",[3312,3314],"[props.token]"]
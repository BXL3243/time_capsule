{"ast":null,"code":"import _regeneratorRuntime from\"/Users/richard/Downloads/crypto-capsule/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/richard/Downloads/crypto-capsule/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _taggedTemplateLiteral from\"/Users/richard/Downloads/crypto-capsule/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from\"react\";import styled from\"styled-components\";import{useDispatch,useSelector}from\"react-redux\";import{selectAddress,setAddress}from\"../state/userSlice\";import Button from\"./Button\";import{getAddress}from\"../services/contracthelper\";import{getTokens}from\"../services/tokenService\";import{setTokens}from\"../state/tokenSlice\";import{jsx as _jsx}from\"react/jsx-runtime\";var StyledConnector=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  z-index: 1;\\n\"])));var Connector=function Connector(){var dispatch=useDispatch();var address=useSelector(selectAddress);var connect=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _address,tokens;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getAddress();case 2:_address=_context.sent;dispatch(setAddress(_address));_context.next=6;return getTokens();case 6:tokens=_context.sent;dispatch(setTokens(tokens));case 8:case\"end\":return _context.stop();}}},_callee);}));return function connect(){return _ref.apply(this,arguments);};}();var formattedAddress=function formattedAddress(){if(address.length<8)return\"\";return\"\".concat(address.substr(0,4),\"...\").concat(address.substr(address.length-4,4));};return/*#__PURE__*/_jsx(StyledConnector,{children:/*#__PURE__*/_jsx(Button,{text:address?formattedAddress():\"Connect\",click:function click(){return connect();}})});};export default Connector;","map":{"version":3,"sources":["/Users/richard/Downloads/crypto-capsule/client/src/components/Connector.tsx"],"names":["React","styled","useDispatch","useSelector","selectAddress","setAddress","Button","getAddress","getTokens","setTokens","StyledConnector","div","Connector","dispatch","address","connect","_address","tokens","formattedAddress","length","substr"],"mappings":"ghBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,aAAT,CAAwBC,UAAxB,KAA0C,oBAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,UAAT,KAA2B,4BAA3B,CACA,OAASC,SAAT,KAA0B,0BAA1B,CACA,OAASC,SAAT,KAA0B,qBAA1B,C,2CAEA,GAAMC,CAAAA,eAAe,CAAGT,MAAM,CAACU,GAAV,kFAArB,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAmB,CACnC,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CACA,GAAMY,CAAAA,OAAO,CAAGX,WAAW,CAACC,aAAD,CAA3B,CAEA,GAAMW,CAAAA,OAAO,0FAAG,6KACSR,CAAAA,UAAU,EADnB,QACRS,QADQ,eAEdH,QAAQ,CAACR,UAAU,CAACW,QAAD,CAAX,CAAR,CAFc,sBAGOR,CAAAA,SAAS,EAHhB,QAGRS,MAHQ,eAIdJ,QAAQ,CAACJ,SAAS,CAACQ,MAAD,CAAV,CAAR,CAJc,sDAAH,kBAAPF,CAAAA,OAAO,0CAAb,CAOA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAIJ,OAAO,CAACK,MAAR,CAAiB,CAArB,CAAwB,MAAO,EAAP,CACxB,gBAAUL,OAAO,CAACM,MAAR,CAAe,CAAf,CAAkB,CAAlB,CAAV,eAAoCN,OAAO,CAACM,MAAR,CAAeN,OAAO,CAACK,MAAR,CAAiB,CAAhC,CAAmC,CAAnC,CAApC,EACD,CAHD,CAKA,mBACE,KAAC,eAAD,wBACE,KAAC,MAAD,EACE,IAAI,CAAEL,OAAO,CAAGI,gBAAgB,EAAnB,CAAwB,SADvC,CAEE,KAAK,CAAE,uBAAMH,CAAAA,OAAO,EAAb,EAFT,EADF,EADF,CAQD,CAxBD,CA0BA,cAAeH,CAAAA,SAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAddress, setAddress } from \"../state/userSlice\";\nimport Button from \"./Button\";\nimport { getAddress } from \"../services/contracthelper\";\nimport { getTokens } from \"../services/tokenService\";\nimport { setTokens } from \"../state/tokenSlice\";\n\nconst StyledConnector = styled.div`\n  z-index: 1;\n`;\n\nconst Connector = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const address = useSelector(selectAddress);\n\n  const connect = async () => {\n    const _address = await getAddress();\n    dispatch(setAddress(_address));\n    const tokens = await getTokens();\n    dispatch(setTokens(tokens));\n  };\n\n  const formattedAddress = () => {\n    if (address.length < 8) return \"\";\n    return `${address.substr(0, 4)}...${address.substr(address.length - 4, 4)}`;\n  };\n\n  return (\n    <StyledConnector>\n      <Button\n        text={address ? formattedAddress() : \"Connect\"}\n        click={() => connect()}\n      />\n    </StyledConnector>\n  );\n};\n\nexport default Connector;\n"]},"metadata":{},"sourceType":"module"}
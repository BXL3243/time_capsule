{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Downloads/crypto-capsule/client/src/components/Popup.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport Block from \"./Block\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPopup = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(6px);\n  z-index: 1;\n`;\n_c = StyledPopup;\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n_c2 = Background;\nconst Container = styled.div`\n  position: relative;\n  width: 600px;\n  padding: 4rem;\n  font-size: 1.4rem;\n  font-weight: 500;\n  color: var(--plain-dark);\n\n  @media (max-width: 768px) {\n    width: 90vw;\n    padding: 2rem;\n  }\n`;\n_c3 = Container;\nconst Content = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-height: calc(90vh - 8rem);\n  overflow-y: auto;\n`;\n_c4 = Content;\nconst Header = styled.h3`\n  font-size: 5.3rem;\n  font-weight: 700;\n  margin-bottom: 3rem;\n  color: var(--main);\n  transform: rotate(-4deg);\n`;\n_c5 = Header;\nconst Image = styled.img`\n  width: 20rem;\n  margin: 1rem 0 2rem 0;\n`;\n_c6 = Image;\nconst Body = styled.p`\n  font-size: 2.6rem;\n  font-weight: 500;\n  margin-bottom: 2rem;\n  text-align: center;\n  color: var(--sub);\n`;\n_c7 = Body;\nconst ButtonContainer = styled.div`\n  margin-top: 2rem;\n  display: flex;\n\n  button {\n    margin: 0 1rem;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n\n    button {\n      margin: 1rem 0;\n    }\n  }\n`;\n_c8 = ButtonContainer;\n\nconst Popup = props => {\n  if (!props.show) return null;\n  return /*#__PURE__*/_jsxDEV(StyledPopup, {\n    children: [/*#__PURE__*/_jsxDEV(Background, {\n      onClick: () => {\n        if (props.loading) return;\n        props.close();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Block, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        children: [props.header && /*#__PURE__*/_jsxDEV(Header, {\n          children: props.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 28\n        }, this), props.image && /*#__PURE__*/_jsxDEV(Image, {\n          src: props.image,\n          alt: \"Popup Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 27\n        }, this), props.body && /*#__PURE__*/_jsxDEV(Body, {\n          children: props.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 26\n        }, this), props.content && props.content, (props.buttonText || props.secondButtonText) && /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: [props.buttonText && /*#__PURE__*/_jsxDEV(Button, {\n            disabled: props.buttonDisabled,\n            text: props.loading ? \"Loading...\" : props.buttonText,\n            click: () => {\n              if (props.loading) return;\n              if (props.buttonAction) props.buttonAction();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), props.secondButtonText && /*#__PURE__*/_jsxDEV(Button, {\n            text: props.loading ? \"Loading...\" : props.secondButtonText,\n            click: () => {\n              if (props.loading) return;\n              if (props.secondButtonAction) props.secondButtonAction();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_c9 = Popup;\nexport default Popup;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"StyledPopup\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"Container\");\n$RefreshReg$(_c4, \"Content\");\n$RefreshReg$(_c5, \"Header\");\n$RefreshReg$(_c6, \"Image\");\n$RefreshReg$(_c7, \"Body\");\n$RefreshReg$(_c8, \"ButtonContainer\");\n$RefreshReg$(_c9, \"Popup\");","map":{"version":3,"sources":["/Users/richard/Downloads/crypto-capsule/client/src/components/Popup.tsx"],"names":["React","styled","Button","Block","StyledPopup","div","Background","Container","Content","Header","h3","Image","img","Body","p","ButtonContainer","Popup","props","show","loading","close","header","image","body","content","buttonText","secondButtonText","buttonDisabled","buttonAction","secondButtonAction"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport Block from \"./Block\";\n\nconst StyledPopup = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.15);\n  backdrop-filter: blur(6px);\n  z-index: 1;\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  width: 600px;\n  padding: 4rem;\n  font-size: 1.4rem;\n  font-weight: 500;\n  color: var(--plain-dark);\n\n  @media (max-width: 768px) {\n    width: 90vw;\n    padding: 2rem;\n  }\n`;\n\nconst Content = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-height: calc(90vh - 8rem);\n  overflow-y: auto;\n`;\n\nconst Header = styled.h3`\n  font-size: 5.3rem;\n  font-weight: 700;\n  margin-bottom: 3rem;\n  color: var(--main);\n  transform: rotate(-4deg);\n`;\n\nconst Image = styled.img`\n  width: 20rem;\n  margin: 1rem 0 2rem 0;\n`;\n\nconst Body = styled.p`\n  font-size: 2.6rem;\n  font-weight: 500;\n  margin-bottom: 2rem;\n  text-align: center;\n  color: var(--sub);\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 2rem;\n  display: flex;\n\n  button {\n    margin: 0 1rem;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n\n    button {\n      margin: 1rem 0;\n    }\n  }\n`;\n\ntype Props = {\n  show: boolean;\n  close: () => void;\n  header?: string;\n  body?: string;\n  content?: JSX.Element;\n  image?: string;\n  buttonText?: string;\n  buttonAction?: () => void;\n  buttonDisabled?: boolean;\n  secondButtonText?: string;\n  secondButtonAction?: () => void;\n  loading?: boolean;\n};\n\nconst Popup: React.FC<Props> = (props) => {\n  if (!props.show) return null;\n\n  return (\n    <StyledPopup>\n      <Background\n        onClick={() => {\n          if (props.loading) return;\n          props.close();\n        }}\n      />\n      <Container>\n        <Block />\n        <Content>\n          {props.header && <Header>{props.header}</Header>}\n          {props.image && <Image src={props.image} alt=\"Popup Image\" />}\n          {props.body && <Body>{props.body}</Body>}\n          {props.content && props.content}\n          {(props.buttonText || props.secondButtonText) && (\n            <ButtonContainer>\n              {props.buttonText && (\n                <Button\n                  disabled={props.buttonDisabled}\n                  text={props.loading ? \"Loading...\" : props.buttonText}\n                  click={() => {\n                    if (props.loading) return;\n                    if (props.buttonAction) props.buttonAction();\n                  }}\n                />\n              )}\n              {props.secondButtonText && (\n                <Button\n                  text={props.loading ? \"Loading...\" : props.secondButtonText}\n                  click={() => {\n                    if (props.loading) return;\n                    if (props.secondButtonAction) props.secondButtonAction();\n                  }}\n                />\n              )}\n            </ButtonContainer>\n          )}\n        </Content>\n      </Container>\n    </StyledPopup>\n  );\n};\n\nexport default Popup;\n"]},"metadata":{},"sourceType":"module"}
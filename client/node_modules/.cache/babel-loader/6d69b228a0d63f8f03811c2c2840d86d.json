{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Documents/time-vault/client/src/components/CapsuleAssets.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { getAssetRealValue, getAssetSymbol } from \"../services/contracthelper\";\nimport { selectAddress } from \"../state/userSlice\";\nimport Button from \"./Button\";\nimport AddAssets from \"./AddAssets\";\nimport BlockContent from \"./BlockContent\";\nimport UnlockMsg from \"./UnlockMsg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = styled.div`\n  font-size: 5rem;\n  margin-bottom: 2rem;\n  color: var(--main);\n  text-align: center;\n  transform: rotate(0deg);\n  margin-top: -1rem;\n`;\n_c = Header;\nconst SubHeaderMain = styled.span`\n  font-size: 2.5rem;\n  color: var(--main);\n  margin-right: 1rem;\n`;\n_c2 = SubHeaderMain;\nconst AssetContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem 0;\n`;\n_c3 = AssetContainer;\nconst TokenContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 6rem;\n`;\n_c4 = TokenContainer;\nconst TokenAddress = styled.div`\n  font-size: 2rem;\n  color: var(--sub);\n`;\n_c5 = TokenAddress;\n// !!FOR TEST\nlet capMsg = \"\";\ncapMsg = \"asadsad\";\nconst capMsgKey = \"123213\"; // !!FOR TEST\n\nconst CapsuleAssets = props => {\n  _s();\n\n  const address = useSelector(selectAddress);\n  const [addingAssets, setAddingAssets] = useState(false);\n  const [assetValues, setAssetValues] = useState([]);\n  const [assetSymbols, setAssetSymbols] = useState([]);\n  const isOpen = !props.capsule ? false : new Date(props.capsule.distributionDate).getTime() < new Date().getTime();\n\n  const updateAssets = async () => {\n    const _assetValues = [];\n    const valuePromises = props.capsule.assets.map(async asset => {\n      const realValue = await getAssetRealValue(asset);\n\n      _assetValues.push({\n        asset: asset.token,\n        value: realValue\n      });\n    });\n    const _assetSymbols = [];\n    const symbolPromises = props.capsule.assets.map(async asset => {\n      const _symbol = await getAssetSymbol(asset.token);\n\n      _assetSymbols.push({\n        asset: asset.token,\n        symbol: _symbol\n      });\n    });\n    await Promise.all(valuePromises);\n    setAssetValues(_assetValues);\n    await Promise.all(symbolPromises);\n    setAssetSymbols(_assetSymbols);\n  };\n\n  useEffect(() => {\n    updateAssets();\n  }, []);\n  const [UnlockingMsg, setUnlockingMsg] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BlockContent, {\n      content: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: \"Vault Assets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), props.capsule.assets.map(asset => /*#__PURE__*/_jsxDEV(AssetContainer, {\n          children: [/*#__PURE__*/_jsxDEV(TokenContainer, {\n            children: [/*#__PURE__*/_jsxDEV(SubHeaderMain, {\n              children: assetSymbols.length === props.capsule.assets.length ? assetSymbols.filter(as => as.asset === asset.token)[0].symbol : \"---\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), asset.token !== \"ETH\" && /*#__PURE__*/_jsxDEV(TokenAddress, {\n              children: asset.token\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(SubHeaderMain, {\n            children: assetValues.length === props.capsule.assets.length ? assetValues.filter(av => av.asset === asset.token)[0].value : \"---\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(AssetContainer, {\n          children: [/*#__PURE__*/_jsxDEV(TokenContainer, {\n            children: /*#__PURE__*/_jsxDEV(SubHeaderMain, {\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            disabled: capMsg === \"\" || !props.capsule.empty,\n            text: capMsg === \"\" ? \"None\" : !props.capsule.empty ? \"Locked\" : \"Input Password\",\n            click: () => setUnlockingMsg(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(UnlockMsg, {\n            capsuleId: props.capsule.id,\n            show: isOpen && UnlockingMsg,\n            close: () => setUnlockingMsg(false) // updateCapsules={() => props.update()}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), props.capsule.grantor === address && props.capsule.addingAssetsAllowed && !isOpen && /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          text: \"Add Assets\",\n          click: () => setAddingAssets(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddAssets, {\n      capsuleId: props.capsule.id,\n      show: addingAssets,\n      close: () => setAddingAssets(false),\n      updateCapsules: () => props.update()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CapsuleAssets, \"fpE98OAa/URH8FlZ0PQTRyFPDyQ=\", false, function () {\n  return [useSelector];\n});\n\n_c6 = CapsuleAssets;\nexport default CapsuleAssets;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"SubHeaderMain\");\n$RefreshReg$(_c3, \"AssetContainer\");\n$RefreshReg$(_c4, \"TokenContainer\");\n$RefreshReg$(_c5, \"TokenAddress\");\n$RefreshReg$(_c6, \"CapsuleAssets\");","map":{"version":3,"sources":["/Users/richard/Documents/time-vault/client/src/components/CapsuleAssets.tsx"],"names":["React","useEffect","useState","useSelector","styled","getAssetRealValue","getAssetSymbol","selectAddress","Button","AddAssets","BlockContent","UnlockMsg","Header","div","SubHeaderMain","span","AssetContainer","TokenContainer","TokenAddress","capMsg","capMsgKey","CapsuleAssets","props","address","addingAssets","setAddingAssets","assetValues","setAssetValues","assetSymbols","setAssetSymbols","isOpen","capsule","Date","distributionDate","getTime","updateAssets","_assetValues","valuePromises","assets","map","asset","realValue","push","token","value","_assetSymbols","symbolPromises","_symbol","symbol","Promise","all","UnlockingMsg","setUnlockingMsg","length","filter","as","av","empty","id","grantor","addingAssetsAllowed","update"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nimport { getAssetRealValue, getAssetSymbol } from \"../services/contracthelper\";\nimport { selectAddress } from \"../state/userSlice\";\nimport CapsuleType, { Asset } from \"../types/CapsuleType\";\n\nimport Button from \"./Button\";\nimport AddAssets from \"./AddAssets\";\nimport BlockContent from \"./BlockContent\";\nimport UnlockMsg from \"./UnlockMsg\";\n\nconst Header = styled.div`\n  font-size: 5rem;\n  margin-bottom: 2rem;\n  color: var(--main);\n  text-align: center;\n  transform: rotate(0deg);\n  margin-top: -1rem;\n`;\n\nconst SubHeaderMain = styled.span`\n  font-size: 2.5rem;\n  color: var(--main);\n  margin-right: 1rem;\n`;\n\nconst AssetContainer = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem 0;\n`;\n\nconst TokenContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 6rem;\n`;\n\nconst TokenAddress = styled.div`\n  font-size: 2rem;\n  color: var(--sub);\n`;\n\ntype AssetValue = {\n  asset: string;\n  value: number;\n};\n\ntype AssetSymbol = {\n  asset: string;\n  symbol: string;\n};\n\ntype Props = {\n  capsule: CapsuleType;\n  update: () => void;\n};\n\n// !!FOR TEST\nlet capMsg = \"\";\ncapMsg = \"asadsad\";\nconst capMsgKey = \"123213\";\n// !!FOR TEST\n\nconst CapsuleAssets = (props: Props): JSX.Element => {\n  const address = useSelector(selectAddress);\n\n  const [addingAssets, setAddingAssets] = useState(false);\n  const [assetValues, setAssetValues] = useState<AssetValue[]>([]);\n  const [assetSymbols, setAssetSymbols] = useState<AssetSymbol[]>([]);\n\n  const isOpen = !props.capsule\n    ? false\n    : new Date(props.capsule.distributionDate).getTime() < new Date().getTime();\n\n  const updateAssets = async () => {\n    const _assetValues: AssetValue[] = [];\n    const valuePromises = props.capsule.assets.map(async (asset: Asset) => {\n      const realValue = await getAssetRealValue(asset);\n      _assetValues.push({\n        asset: asset.token,\n        value: realValue,\n      });\n    });\n\n    const _assetSymbols: AssetSymbol[] = [];\n    const symbolPromises = props.capsule.assets.map(async (asset: Asset) => {\n      const _symbol = await getAssetSymbol(asset.token);\n      _assetSymbols.push({\n        asset: asset.token,\n        symbol: _symbol,\n      });\n    });\n\n    await Promise.all(valuePromises);\n    setAssetValues(_assetValues);\n    await Promise.all(symbolPromises);\n    setAssetSymbols(_assetSymbols);\n  };\n\n  useEffect(() => {\n    updateAssets();\n  }, []);\n\n  const [UnlockingMsg, setUnlockingMsg] = useState(false);\n\n  return (\n    <>\n      <BlockContent\n        content={\n          <>\n            <Header>Vault Assets</Header>\n            {props.capsule.assets.map((asset: Asset) => (\n              <AssetContainer>\n                <TokenContainer>\n                  <SubHeaderMain>\n                    {assetSymbols.length === props.capsule.assets.length\n                      ? assetSymbols.filter(\n                          (as: AssetSymbol) => as.asset === asset.token\n                        )[0].symbol\n                      : \"---\"}\n                  </SubHeaderMain>\n                  {asset.token !== \"ETH\" && (\n                    <TokenAddress>{asset.token}</TokenAddress>\n                  )}\n                </TokenContainer>\n                <SubHeaderMain>\n                  {assetValues.length === props.capsule.assets.length\n                    ? assetValues.filter(\n                        (av: AssetValue) => av.asset === asset.token\n                      )[0].value\n                    : \"---\"}\n                </SubHeaderMain>\n              </AssetContainer>\n            ))}\n            <AssetContainer>\n              <TokenContainer>\n                <SubHeaderMain>Message</SubHeaderMain>\n              </TokenContainer>\n              <Button\n                primary\n                disabled={capMsg === \"\" || !props.capsule.empty}\n                text={\n                  capMsg === \"\"\n                    ? \"None\"\n                    : !props.capsule.empty\n                    ? \"Locked\"\n                    : \"Input Password\"\n                }\n                click={() => setUnlockingMsg(true)}\n              />\n              <UnlockMsg\n                capsuleId={props.capsule.id}\n                show={isOpen && UnlockingMsg}\n                close={() => setUnlockingMsg(false)}\n                // updateCapsules={() => props.update()}\n              />\n            </AssetContainer>\n            {props.capsule.grantor === address &&\n              props.capsule.addingAssetsAllowed &&\n              !isOpen && (\n                <Button\n                  primary\n                  text=\"Add Assets\"\n                  click={() => setAddingAssets(true)}\n                />\n              )}\n          </>\n        }\n      />\n      <AddAssets\n        capsuleId={props.capsule.id}\n        show={addingAssets}\n        close={() => setAddingAssets(false)}\n        updateCapsules={() => props.update()}\n      />\n    </>\n  );\n};\n\nexport default CapsuleAssets;\n"]},"metadata":{},"sourceType":"module"}
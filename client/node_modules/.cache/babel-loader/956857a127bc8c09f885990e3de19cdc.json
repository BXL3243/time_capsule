{"ast":null,"code":"import _slicedToArray from\"/Users/richard/Documents/GitHub/time_capsule/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/richard/Documents/GitHub/time_capsule/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5;import React,{useRef,useState}from\"react\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StyledTooltip=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  margin-left: 1rem;\\n\"])));var ExitEvent=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.2);\\n  z-index: 1;\\n\"])));var HelpIcon=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 1.8rem;\\n  height: 1.8rem;\\n  border-radius: 50%;\\n  font-weight: 500;\\n  font-size: 1.2rem;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: var(--bg);\\n  border: solid 1px var(--primary);\\n  color: var(--primary);\\n  outline: none;\\n  cursor: pointer;\\n  padding-right: 0.4rem;\\n\"])));var Indicator=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 2rem;\\n  height: 2rem;\\n  background-color: var(--bg);\\n  position: absolute;\\n  top: 200%;\\n  left: 30%;\\n  transform: rotate(0deg) translateX(-50%);\\n  border-radius: 0.2rem;\\n  z-index: 2;\\n\"])));var Popup=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: \",\";\\n  left: calc(100vw / 2);\\n  transform: translateX(-50%);\\n  width: 500px;\\n  padding: 1.7rem;\\n  border-radius: 1rem;\\n  background-color: var(--bg);\\n  color: var(--main);\\n  font-size: 2.1rem;\\n  z-index: 2;\\n\\n  @media (max-width: 600px) {\\n    width: 90vw;\\n  }\\n\"])),function(props){return props.top;});var Tooltip=function Tooltip(props){var _tooltipRef$current,_tooltipRef$current2;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var tooltipRef=useRef(null);return/*#__PURE__*/_jsxs(StyledTooltip,{ref:tooltipRef,children:[open&&/*#__PURE__*/_jsx(ExitEvent,{onClick:function onClick(){return setOpen(false);}}),/*#__PURE__*/_jsx(HelpIcon,{onClick:function onClick(){return setOpen(true);},children:\"?\"}),open&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Indicator,{}),/*#__PURE__*/_jsx(Popup,{top:\"\".concat(tooltipRef.current?((_tooltipRef$current=tooltipRef.current)===null||_tooltipRef$current===void 0?void 0:_tooltipRef$current.getBoundingClientRect().bottom)+((_tooltipRef$current2=tooltipRef.current)===null||_tooltipRef$current2===void 0?void 0:_tooltipRef$current2.getBoundingClientRect().height):0,\"px\"),children:props.content})]})]});};export default Tooltip;","map":{"version":3,"sources":["/Users/richard/Documents/GitHub/time_capsule/client/src/components/Tooltip.tsx"],"names":["React","useRef","useState","styled","StyledTooltip","div","ExitEvent","HelpIcon","button","Indicator","Popup","props","top","Tooltip","open","setOpen","tooltipRef","current","getBoundingClientRect","bottom","height","content"],"mappings":"4bAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,6IAEA,GAAMC,CAAAA,aAAa,CAAGD,MAAM,CAACE,GAAV,gHAAnB,CAKA,GAAMC,CAAAA,SAAS,CAAGH,MAAM,CAACE,GAAV,yMAAf,CAUA,GAAME,CAAAA,QAAQ,CAAGJ,MAAM,CAACK,MAAV,iZAAd,CAiBA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACE,GAAV,+QAAf,CAgBA,GAAMK,CAAAA,KAAK,CAAGP,MAAM,CAACE,GAAV,iXAEF,SAACM,KAAD,QAAuBA,CAAAA,KAAK,CAACC,GAA7B,EAFE,CAAX,CAsBA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACF,KAAD,CAA+B,4DACrBT,QAAQ,CAAC,KAAD,CADa,wCACtCY,IADsC,eAChCC,OADgC,eAE7C,GAAMC,CAAAA,UAAU,CAAGf,MAAM,CAAiB,IAAjB,CAAzB,CAEA,mBACE,MAAC,aAAD,EAAe,GAAG,CAAEe,UAApB,WACGF,IAAI,eAAI,KAAC,SAAD,EAAW,OAAO,CAAE,yBAAMC,CAAAA,OAAO,CAAC,KAAD,CAAb,EAApB,EADX,cAEE,KAAC,QAAD,EAAU,OAAO,CAAE,yBAAMA,CAAAA,OAAO,CAAC,IAAD,CAAb,EAAnB,eAFF,CAGGD,IAAI,eACH,wCACE,KAAC,SAAD,IADF,cAEE,KAAC,KAAD,EACE,GAAG,WACDE,UAAU,CAACC,OAAX,CACI,sBAAAD,UAAU,CAACC,OAAX,kEAAoBC,qBAApB,GAA4CC,MAA5C,yBACAH,UAAU,CAACC,OADX,+CACA,qBAAoBC,qBAApB,GAA4CE,MAD5C,CADJ,CAGI,CAJH,MADL,UAQGT,KAAK,CAACU,OART,EAFF,GAJJ,GADF,CAqBD,CAzBD,CA2BA,cAAeR,CAAAA,OAAf","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTooltip = styled.div`\n  position: relative;\n  margin-left: 1rem;\n`;\n\nconst ExitEvent = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.2);\n  z-index: 1;\n`;\n\nconst HelpIcon = styled.button`\n  width: 1.8rem;\n  height: 1.8rem;\n  border-radius: 50%;\n  font-weight: 500;\n  font-size: 1.2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: var(--bg);\n  border: solid 1px var(--primary);\n  color: var(--primary);\n  outline: none;\n  cursor: pointer;\n  padding-right: 0.4rem;\n`;\n\nconst Indicator = styled.div`\n  width: 2rem;\n  height: 2rem;\n  background-color: var(--bg);\n  position: absolute;\n  top: 200%;\n  left: 30%;\n  transform: rotate(0deg) translateX(-50%);\n  border-radius: 0.2rem;\n  z-index: 2;\n`;\n\ntype PopupProps = {\n  top: string;\n};\n\nconst Popup = styled.div`\n  position: fixed;\n  top: ${(props: PopupProps) => props.top};\n  left: calc(100vw / 2);\n  transform: translateX(-50%);\n  width: 500px;\n  padding: 1.7rem;\n  border-radius: 1rem;\n  background-color: var(--bg);\n  color: var(--main);\n  font-size: 2.1rem;\n  z-index: 2;\n\n  @media (max-width: 600px) {\n    width: 90vw;\n  }\n`;\n\ntype Props = {\n  content: string;\n};\n\nconst Tooltip = (props: Props): JSX.Element => {\n  const [open, setOpen] = useState(false);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <StyledTooltip ref={tooltipRef}>\n      {open && <ExitEvent onClick={() => setOpen(false)} />}\n      <HelpIcon onClick={() => setOpen(true)}>?</HelpIcon>\n      {open && (\n        <>\n          <Indicator />\n          <Popup\n            top={`${\n              tooltipRef.current\n                ? tooltipRef.current?.getBoundingClientRect().bottom +\n                  tooltipRef.current?.getBoundingClientRect().height\n                : 0\n            }px`}\n          >\n            {props.content}\n          </Popup>\n        </>\n      )}\n    </StyledTooltip>\n  );\n};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}
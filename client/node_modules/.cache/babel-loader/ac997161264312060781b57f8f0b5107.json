{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Documents/GitHub/time_sapsule/client/src/components/Capsule.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport capsuleOpenSmall from \"../assets/capsule-open-small.png\";\nimport capsuleLockedSmall from \"../assets/capsule-locked-small.png\";\nimport capsuleReadySmall from \"../assets/capsule-ready-small.png\";\nimport Button from \"./Button\";\nimport { selectTokens } from \"../state/tokenSlice\";\nimport { getCapsuleUsdValue } from \"../services/oracleService\";\nimport BlockContent from \"./BlockContent\";\nimport Countdown from \"./Countdown\";\nimport { getCanBeOpened } from \"../services/dateHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Content = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 27rem;\n`;\n_c = Content;\nconst Dollars = styled.div`\n  color: var(--main);\n  font-size: 4rem;\n  font-weight: 500;\n  margin-bottom: 1rem;\n  text-align: right;\n`;\n_c2 = Dollars;\nconst Image = styled.img`\n  height: 15rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  color: var(--main);\n  text-transform: uppercase;\n  transform: translateX(-1rem);\n  margin-bottom: 1rem;\n`;\n_c3 = Image;\nconst Crypto = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n`;\n_c4 = Crypto;\nconst CyptoIconContainer = styled.div`\n  width: 1.3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c5 = CyptoIconContainer;\nconst CryptoIcon = styled.img`\n  background-color: white;\n  border-radius: 50%;\n  width: 2rem;\n`;\n_c6 = CryptoIcon;\n\nconst Capsule = props => {\n  _s();\n\n  const history = useHistory();\n  const tokens = useSelector(selectTokens);\n  const [usd, setUsd] = useState(\"$0\");\n  const canBeOpened = getCanBeOpened(props.capsule);\n\n  const getUsd = async () => {\n    const usdValue = await getCapsuleUsdValue(props.capsule);\n    setUsd(`$${Number(usdValue).toFixed(0).toLocaleString()}`);\n  };\n\n  useEffect(() => {\n    getUsd();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BlockContent, {\n      content: /*#__PURE__*/_jsxDEV(Content, {\n        children: [usd !== \"$0\" && /*#__PURE__*/_jsxDEV(Dollars, {\n          children: `${usd}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          src: props.capsule.empty ? capsuleOpenSmall : !canBeOpened ? capsuleLockedSmall : capsuleReadySmall,\n          alt: props.capsule.empty ? \"Capsule Empty Image\" : !canBeOpened ? \"Capsule Locked Image\" : \"Capsule Ready Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n          capsule: props.capsule,\n          short: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Crypto, {\n          children: props.capsule.assets.map(asset => {\n            var _tokens$filter$, _tokens$filter$2;\n\n            return /*#__PURE__*/_jsxDEV(CyptoIconContainer, {\n              children: /*#__PURE__*/_jsxDEV(CryptoIcon, {\n                src: (_tokens$filter$ = tokens.filter(token => token.address === asset.token)[0]) === null || _tokens$filter$ === void 0 ? void 0 : _tokens$filter$.logoURI,\n                alt: `${(_tokens$filter$2 = tokens.filter(token => token.address === asset.token)[0]) === null || _tokens$filter$2 === void 0 ? void 0 : _tokens$filter$2.symbol} Token Image`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, asset.token, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          click: () => history.push(`/capsule/${props.capsule.id}`),\n          text: \"View Capsule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this),\n      marginBottom: \"2rem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Capsule, \"Q1DOfs/VSDw7c7yd4OE19NYlYKM=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c7 = Capsule;\nexport default Capsule;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"Dollars\");\n$RefreshReg$(_c3, \"Image\");\n$RefreshReg$(_c4, \"Crypto\");\n$RefreshReg$(_c5, \"CyptoIconContainer\");\n$RefreshReg$(_c6, \"CryptoIcon\");\n$RefreshReg$(_c7, \"Capsule\");","map":{"version":3,"sources":["/Users/richard/Documents/GitHub/time_sapsule/client/src/components/Capsule.tsx"],"names":["React","useEffect","useState","styled","useSelector","useHistory","capsuleOpenSmall","capsuleLockedSmall","capsuleReadySmall","Button","selectTokens","getCapsuleUsdValue","BlockContent","Countdown","getCanBeOpened","Content","div","Dollars","Image","img","Crypto","CyptoIconContainer","CryptoIcon","Capsule","props","history","tokens","usd","setUsd","canBeOpened","capsule","getUsd","usdValue","Number","toFixed","toLocaleString","empty","assets","map","asset","filter","token","address","logoURI","symbol","push","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport countdown from \"countdown\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\nimport capsuleOpenSmall from \"../assets/capsule-open-small.png\";\nimport capsuleLockedSmall from \"../assets/capsule-locked-small.png\";\nimport capsuleReadySmall from \"../assets/capsule-ready-small.png\";\n\nimport Button from \"./Button\";\nimport CapsuleType, { Asset } from \"../types/CapsuleType\";\nimport { selectTokens } from \"../state/tokenSlice\";\nimport Token from \"../types/Token\";\nimport { getCapsuleUsdValue } from \"../services/oracleService\";\nimport BlockContent from \"./BlockContent\";\nimport Countdown from \"./Countdown\";\nimport { getCanBeOpened } from \"../services/dateHelper\";\n\nconst Content = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 27rem;\n`;\n\nconst Dollars = styled.div`\n  color: var(--main);\n  font-size: 4rem;\n  font-weight: 500;\n  margin-bottom: 1rem;\n  text-align: right;\n`;\n\nconst Image = styled.img`\n  height: 15rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1rem;\n  color: var(--main);\n  text-transform: uppercase;\n  transform: translateX(-1rem);\n  margin-bottom: 1rem;\n`;\n\nconst Crypto = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n`;\n\nconst CyptoIconContainer = styled.div`\n  width: 1.3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CryptoIcon = styled.img`\n  background-color: white;\n  border-radius: 50%;\n  width: 2rem;\n`;\n\ntype Props = {\n  capsule: CapsuleType;\n};\n\nconst Capsule = (props: Props): JSX.Element => {\n  const history = useHistory();\n\n  const tokens = useSelector(selectTokens);\n\n  const [usd, setUsd] = useState(\"$0\");\n\n  const canBeOpened = getCanBeOpened(props.capsule);\n\n  const getUsd = async () => {\n    const usdValue = await getCapsuleUsdValue(props.capsule);\n    setUsd(`$${Number(usdValue).toFixed(0).toLocaleString()}`);\n  };\n\n  useEffect(() => {\n    getUsd();\n  }, []);\n\n  return (\n    <>\n      <BlockContent\n        content={\n          <Content>\n            {usd !== \"$0\" && <Dollars>{`${usd}`}</Dollars>}\n            <Image\n              src={\n                props.capsule.empty\n                  ? capsuleOpenSmall\n                  : !canBeOpened\n                  ? capsuleLockedSmall\n                  : capsuleReadySmall\n              }\n              alt={\n                props.capsule.empty\n                  ? \"Capsule Empty Image\"\n                  : !canBeOpened\n                  ? \"Capsule Locked Image\"\n                  : \"Capsule Ready Image\"\n              }\n            />\n            <Countdown capsule={props.capsule} short />\n            <Crypto>\n              {props.capsule.assets.map((asset: Asset) => (\n                <CyptoIconContainer key={asset.token}>\n                  <CryptoIcon\n                    src={\n                      tokens.filter(\n                        (token: Token) => token.address === asset.token\n                      )[0]?.logoURI\n                    }\n                    alt={`${\n                      tokens.filter(\n                        (token: Token) => token.address === asset.token\n                      )[0]?.symbol\n                    } Token Image`}\n                  />\n                </CyptoIconContainer>\n              ))}\n            </Crypto>\n            <Button\n              click={() => history.push(`/capsule/${props.capsule.id}`)}\n              text=\"View Capsule\"\n            />\n          </Content>\n        }\n        marginBottom=\"2rem\"\n      />\n    </>\n  );\n};\n\nexport default Capsule;\n"]},"metadata":{},"sourceType":"module"}
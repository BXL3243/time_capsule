{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Documents/time-vault/client/src/components/Dropdown.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Label from \"./Label\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledDropdown = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0;\n`;\n_c = StyledDropdown;\nconst Select = styled.select`\n  text-transform: capitalize;\n  width: 100%;\n  border: solid 2px var(--main);\n  padding: 10px;\n  color: var(--main);\n  font-size: 16px;\n  background-color: rgba(0, 0, 0, 0);\n\n  :active {\n    border: solid 2px var(--primary);\n  }\n`;\n_c2 = Select;\nconst Option = styled.option`\n  text-transform: capitalize;\n`;\n_c3 = Option;\n\nconst Dropdown = props => {\n  return /*#__PURE__*/_jsxDEV(StyledDropdown, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      text: props.label,\n      tooltip: props.tooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      onChange: event => props.setOption(event.target.value),\n      children: props.options.map(option => /*#__PURE__*/_jsxDEV(Option, {\n        value: option,\n        selected: props.activeOption === option,\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Dropdown;\nexport default Dropdown;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledDropdown\");\n$RefreshReg$(_c2, \"Select\");\n$RefreshReg$(_c3, \"Option\");\n$RefreshReg$(_c4, \"Dropdown\");","map":{"version":3,"sources":["/Users/richard/Documents/time-vault/client/src/components/Dropdown.tsx"],"names":["React","styled","Label","StyledDropdown","div","Select","select","Option","option","Dropdown","props","label","tooltip","event","setOption","target","value","options","map","activeOption"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,cAAc,GAAGF,MAAM,CAACG,GAAI;AAClC;AACA;AACA;AACA,CAJA;KAAMD,c;AAMN,MAAME,MAAM,GAAGJ,MAAM,CAACK,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;MAAMD,M;AAcN,MAAME,MAAM,GAAGN,MAAM,CAACO,MAAO;AAC7B;AACA,CAFA;MAAMD,M;;AAYN,MAAME,QAAQ,GAAIC,KAAD,IAA+B;AAC9C,sBACE,QAAC,cAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEA,KAAK,CAACC,KAAnB;AAA0B,MAAA,OAAO,EAAED,KAAK,CAACE;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAGC,KAAD,IAAWH,KAAK,CAACI,SAAN,CAAgBD,KAAK,CAACE,MAAN,CAAaC,KAA7B,CAA7B;AAAA,gBACGN,KAAK,CAACO,OAAN,CAAcC,GAAd,CAAmBV,MAAD,iBACjB,QAAC,MAAD;AAEE,QAAA,KAAK,EAAEA,MAFT;AAGE,QAAA,QAAQ,EAAEE,KAAK,CAACS,YAAN,KAAuBX,MAHnC;AAAA,kBAKGA;AALH,SACOA,MADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAjBD;;MAAMC,Q;AAmBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Label from \"./Label\";\n\nconst StyledDropdown = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 1rem 0;\n`;\n\nconst Select = styled.select`\n  text-transform: capitalize;\n  width: 100%;\n  border: solid 2px var(--main);\n  padding: 10px;\n  color: var(--main);\n  font-size: 16px;\n  background-color: rgba(0, 0, 0, 0);\n\n  :active {\n    border: solid 2px var(--primary);\n  }\n`;\n\nconst Option = styled.option`\n  text-transform: capitalize;\n`;\n\ntype Props = {\n  label: string;\n  tooltip?: string;\n  options: string[];\n  activeOption: string;\n  setOption: (option: string) => void;\n};\n\nconst Dropdown = (props: Props): JSX.Element => {\n  return (\n    <StyledDropdown>\n      <Label text={props.label} tooltip={props.tooltip} />\n      <Select onChange={(event) => props.setOption(event.target.value)}>\n        {props.options.map((option: string) => (\n          <Option\n            key={option}\n            value={option}\n            selected={props.activeOption === option}\n          >\n            {option}\n          </Option>\n        ))}\n      </Select>\n    </StyledDropdown>\n  );\n};\n\nexport default Dropdown;\n"]},"metadata":{},"sourceType":"module"}
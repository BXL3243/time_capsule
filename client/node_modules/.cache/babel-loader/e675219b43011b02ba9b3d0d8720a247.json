{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Documents/time-vault/client/src/components/Selector.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport Label from \"./Label\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSelector = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n`;\n_c = StyledSelector;\nconst Container = styled.div`\n  display: flex;\n  margin: 1rem 0;\n`;\n_c2 = Container;\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n_c3 = OptionsContainer;\n\nconst Selector = props => {\n  const options = [...props.options];\n  options.reverse();\n  return /*#__PURE__*/_jsxDEV(StyledSelector, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      text: props.label,\n      tooltip: props.tooltip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(OptionsContainer, {\n        children: options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n          small: true,\n          selected: option === props.activeOption,\n          text: option,\n          click: () => props.setOption(option)\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Selector;\nexport default Selector;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StyledSelector\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"OptionsContainer\");\n$RefreshReg$(_c4, \"Selector\");","map":{"version":3,"sources":["/Users/richard/Documents/time-vault/client/src/components/Selector.tsx"],"names":["React","styled","Button","Label","StyledSelector","div","Container","OptionsContainer","Selector","props","options","reverse","label","tooltip","map","option","index","activeOption","setOption"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAI;AAClC;AACA;AACA;AACA,CAJA;KAAMD,c;AAMN,MAAME,SAAS,GAAGL,MAAM,CAACI,GAAI;AAC7B;AACA;AACA,CAHA;MAAMC,S;AAKN,MAAMC,gBAAgB,GAAGN,MAAM,CAACI,GAAI;AACpC;AACA;AACA,CAHA;MAAME,gB;;AAaN,MAAMC,QAAQ,GAAIC,KAAD,IAA+B;AAC9C,QAAMC,OAAO,GAAG,CAAC,GAAGD,KAAK,CAACC,OAAV,CAAhB;AACAA,EAAAA,OAAO,CAACC,OAAR;AAEA,sBACE,QAAC,cAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,KAAK,CAACG,KAAnB;AAA0B,MAAA,OAAO,EAAEH,KAAK,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAA,6BACE,QAAC,gBAAD;AAAA,kBACGH,OAAO,CAACI,GAAR,CAAY,CAACC,MAAD,EAAiBC,KAAjB,kBACX,QAAC,MAAD;AACE,UAAA,KAAK,MADP;AAGE,UAAA,QAAQ,EAAED,MAAM,KAAKN,KAAK,CAACQ,YAH7B;AAIE,UAAA,IAAI,EAAEF,MAJR;AAKE,UAAA,KAAK,EAAE,MAAMN,KAAK,CAACS,SAAN,CAAgBH,MAAhB;AALf,WAEOA,MAFP;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtBD;;MAAMP,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"./Button\";\nimport Label from \"./Label\";\n\nconst StyledSelector = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1rem;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  margin: 1rem 0;\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\ntype Props = {\n  options: string[];\n  activeOption: string;\n  label: string;\n  tooltip?: string;\n  setOption: (option: string) => void;\n};\n\nconst Selector = (props: Props): JSX.Element => {\n  const options = [...props.options];\n  options.reverse();\n\n  return (\n    <StyledSelector>\n      <Label text={props.label} tooltip={props.tooltip} />\n      <Container>\n        <OptionsContainer>\n          {options.map((option: string, index: number) => (\n            <Button\n              small\n              key={option}\n              selected={option === props.activeOption}\n              text={option}\n              click={() => props.setOption(option)}\n            />\n          ))}\n        </OptionsContainer>\n      </Container>\n    </StyledSelector>\n  );\n};\n\nexport default Selector;\n"]},"metadata":{},"sourceType":"module"}
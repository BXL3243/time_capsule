{"ast":null,"code":"import _slicedToArray from\"/Users/richard/Documents/time-vault/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/richard/Documents/time-vault/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect,useRef,useState}from\"react\";import styled from\"styled-components\";import countdown from\"countdown\";import{getCanBeOpened,getNextOpenDate}from\"../services/dateHelper\";import{jsx as _jsx}from\"react/jsx-runtime\";var StyledCountdown=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: \",\";\\n  transform: \",\";\\n  color: var(--main);\\n  margin-bottom: \",\";\\n\"])),function(props){return props.short?\"3rem\":\"4rem\";},function(props){return props.short?\"none\":\"rotate(0deg)\";},function(props){return props.short?\"0\":\"2rem\";});var Countdown=function Countdown(props){var _useState=useState(new Date()),_useState2=_slicedToArray(_useState,2),now=_useState2[0],setNow=_useState2[1];var nowRef=useRef(now);nowRef.current=now;var canBeOpened=getCanBeOpened(props.capsule);var nextOpen=getNextOpenDate(props.capsule);var tick=function tick(){setNow(new Date(nowRef.current.setSeconds(nowRef.current.getSeconds()+1)));};useEffect(function(){setInterval(function(){return tick();},1000);},[]);return/*#__PURE__*/_jsx(StyledCountdown,{short:props.short,children:props.capsule.empty?\"Vault is Empty\":canBeOpened?\"Ready to Open\":countdown(new Date(),nextOpen,countdown.ALL,props.short?2:3).toString()});};export default Countdown;","map":{"version":3,"sources":["/Users/richard/Documents/time-vault/client/src/components/Countdown.tsx"],"names":["React","useEffect","useRef","useState","styled","countdown","getCanBeOpened","getNextOpenDate","StyledCountdown","div","props","short","Countdown","Date","now","setNow","nowRef","current","canBeOpened","capsule","nextOpen","tick","setSeconds","getSeconds","setInterval","empty","ALL","toString"],"mappings":"sWAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CAEA,OAASC,cAAT,CAAyBC,eAAzB,KAAgD,wBAAhD,C,2CAMA,GAAMC,CAAAA,eAAe,CAAGJ,MAAM,CAACK,GAAV,uJACN,SAACC,KAAD,QAA4BA,CAAAA,KAAK,CAACC,KAAN,CAAc,MAAd,CAAuB,MAAnD,EADM,CAEN,SAACD,KAAD,QACXA,CAAAA,KAAK,CAACC,KAAN,CAAc,MAAd,CAAuB,cADZ,EAFM,CAKF,SAACD,KAAD,QAA4BA,CAAAA,KAAK,CAACC,KAAN,CAAc,GAAd,CAAoB,MAAhD,EALE,CAArB,CAaA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACF,KAAD,CAA+B,eACzBP,QAAQ,CAAC,GAAIU,CAAAA,IAAJ,EAAD,CADiB,wCACxCC,GADwC,eACnCC,MADmC,eAE/C,GAAMC,CAAAA,MAAM,CAAGd,MAAM,CAACY,GAAD,CAArB,CACAE,MAAM,CAACC,OAAP,CAAiBH,GAAjB,CAEA,GAAMI,CAAAA,WAAW,CAAGZ,cAAc,CAACI,KAAK,CAACS,OAAP,CAAlC,CACA,GAAMC,CAAAA,QAAQ,CAAGb,eAAe,CAACG,KAAK,CAACS,OAAP,CAAhC,CAEA,GAAME,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjBN,MAAM,CACJ,GAAIF,CAAAA,IAAJ,CAASG,MAAM,CAACC,OAAP,CAAeK,UAAf,CAA0BN,MAAM,CAACC,OAAP,CAAeM,UAAf,GAA8B,CAAxD,CAAT,CADI,CAAN,CAGD,CAJD,CAMAtB,SAAS,CAAC,UAAM,CACduB,WAAW,CAAC,iBAAMH,CAAAA,IAAI,EAAV,EAAD,CAAe,IAAf,CAAX,CACD,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACE,KAAC,eAAD,EAAiB,KAAK,CAAEX,KAAK,CAACC,KAA9B,UACGD,KAAK,CAACS,OAAN,CAAcM,KAAd,CACG,gBADH,CAEGP,WAAW,CACX,eADW,CAEXb,SAAS,CACP,GAAIQ,CAAAA,IAAJ,EADO,CAEPO,QAFO,CAGPf,SAAS,CAACqB,GAHH,CAIPhB,KAAK,CAACC,KAAN,CAAc,CAAd,CAAkB,CAJX,CAAT,CAKEgB,QALF,EALN,EADF,CAcD,CAhCD,CAkCA,cAAef,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport countdown from \"countdown\";\nimport CapsuleType from \"../types/CapsuleType\";\nimport { getCanBeOpened, getNextOpenDate } from \"../services/dateHelper\";\n\ntype CountdownProps = {\n  short?: boolean;\n};\n\nconst StyledCountdown = styled.div`\n  font-size: ${(props: CountdownProps) => (props.short ? \"3rem\" : \"4rem\")};\n  transform: ${(props: CountdownProps) =>\n    props.short ? \"none\" : \"rotate(0deg)\"};\n  color: var(--main);\n  margin-bottom: ${(props: CountdownProps) => (props.short ? \"0\" : \"2rem\")};\n`;\n\ntype Props = {\n  capsule: CapsuleType;\n  short?: boolean;\n};\n\nconst Countdown = (props: Props): JSX.Element => {\n  const [now, setNow] = useState(new Date());\n  const nowRef = useRef(now);\n  nowRef.current = now;\n\n  const canBeOpened = getCanBeOpened(props.capsule);\n  const nextOpen = getNextOpenDate(props.capsule);\n\n  const tick = () => {\n    setNow(\n      new Date(nowRef.current.setSeconds(nowRef.current.getSeconds() + 1))\n    );\n  };\n\n  useEffect(() => {\n    setInterval(() => tick(), 1000);\n  }, []);\n\n  return (\n    <StyledCountdown short={props.short}>\n      {props.capsule.empty\n        ? \"Vault is Empty\"\n        : canBeOpened\n        ? \"Ready to Open\"\n        : countdown(\n            new Date(),\n            nextOpen,\n            countdown.ALL,\n            props.short ? 2 : 3\n          ).toString()}\n    </StyledCountdown>\n  );\n};\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}
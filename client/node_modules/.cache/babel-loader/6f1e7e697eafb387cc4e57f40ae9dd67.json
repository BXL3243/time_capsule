{"ast":null,"code":"var _jsxFileName = \"/Users/richard/Documents/GitHub/time_capsule/client/src/components/CreateCapsule.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport crypto from \"crypto\";\nimport copy from \"copy-to-clipboard\";\nimport BN from \"bn.js\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { gtag } from \"@deptno/gtag\";\nimport lockedCapsule from \"../assets/capsule-locked-large.png\";\nimport { createCapsule, getAssetLongValue, getTokenContract, tokenApproved } from \"../services/contracthelper\";\nimport { getPeriodSize, inputToDate } from \"../services/dateHelper\";\nimport { selectTokens } from \"../state/tokenSlice\";\nimport Assets from \"./Assets\";\nimport TextInput from \"./TextInput\";\nimport Popup from \"./Popup\";\nimport { ValidationError } from \"../styles/ValidationError\";\nimport Selector from \"./Selector\";\nimport Dropdown from \"./Dropdown\";\nimport { getGlobals } from \"../utils/globals\";\nimport Button from \"./Button\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Content;\nconst ButtonContainer = styled.div`\n  margin-top: 2rem;\n  display: flex;\n\n  button {\n    margin: 0 1rem;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n\n    button {\n      margin: 1rem 0;\n    }\n  }\n`;\n_c2 = ButtonContainer;\n\nconst CreateCapsule = props => {\n  _s();\n\n  if (!props.show) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const history = useHistory();\n  const ethAsset = {\n    token: \"ETH\",\n    value: \"0\"\n  };\n  const approval = {\n    asset: ethAsset,\n    approved: true\n  };\n  const [loading, setLoading] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [messagePasswordCopyState, setMessagePasswordCopyState] = useState(false);\n  const [beneficiary, setBeneficiary] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [distributionDate, setDistributionDate] = useState(\"\");\n  const [messagePassword, setMessagePassword] = useState(\"\");\n  const [periodType, setPeriodType] = useState(\"immediate\");\n  const [distributionFrequency, setDistributionFrequency] = useState(\"monthly\");\n  const [distributionPeriods, setDistributionPeriods] = useState(\"\");\n  const [distributionDateError, setDistributionDateError] = useState(\"\");\n  const [addingAssetsAllowed, setAddingAssetsAllowed] = useState(\"yes\");\n  const [addressError, setAddressError] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [messageCopyError, setMessageCopyError] = useState(\"\");\n  const [distributionPeriodsError, setDistributionPeriodsError] = useState(\"\");\n  const [assets, setAssets] = useState([ethAsset]);\n  const [approvals, setApprovals] = useState([approval]);\n  const tokens = useSelector(selectTokens);\n  const unapproved = approvals.filter(a => !a.approved);\n\n  const addressSymbol = address => tokens.filter(token => token.address === address)[0].symbol;\n\n  const updateApprovals = async assets => {\n    const _approvals = [];\n    const promises = assets.map(async asset => {\n      _approvals.push({\n        asset,\n        approved: await tokenApproved(asset.token)\n      });\n    });\n    await Promise.all(promises);\n    setApprovals(_approvals);\n  };\n\n  const tokenApprove = async address => {\n    const globals = await getGlobals();\n    const tokenContract = await getTokenContract(address);\n    tokenContract.methods.approve(globals.CAPSULE, new BN(\"9999999999999999999999999999\")).send().on(\"transactionHash\", hash => {\n      setLoading(true);\n    }).on(\"receipt\", async receipt => {\n      await updateApprovals(assets);\n      setLoading(false);\n    }).on(\"error\", err => {\n      console.log(`Error: ${err}`);\n      setLoading(false);\n    });\n  };\n\n  const aesEncrypt = (value, key) => {\n    if (value === \"\") return \"\";\n    const encValue = escape(value);\n    const cipher = crypto.createCipheriv(\"aes-128-cbc\", key.slice(0, 16), key.slice(16));\n    let crypted = cipher.update(encValue, \"utf8\", \"hex\");\n    crypted += cipher.final(\"hex\");\n    return crypted;\n  };\n\n  const getMD5 = value => {\n    const hash = crypto.createHash(\"md5\");\n    hash.update(value);\n    return hash.digest(\"hex\"); // 7e1977739c748beac0c0fd14fd26a544\n  };\n\n  const create = async () => {\n    if (!validate()) return;\n    setLoading(true);\n    const _assets = [];\n    const promises = assets.map(async asset => {\n      _assets.push({\n        token: asset.token,\n        value: await getAssetLongValue(Number.parseFloat(asset.value), asset.token)\n      });\n    });\n    await Promise.all(promises);\n    const date = inputToDate(distributionDate);\n    const sigMsg = message === \"\" ? \"\" : \"PF:\".concat(message);\n    const hashMsg = sigMsg === \"\" ? \"\" : getMD5(sigMsg).concat(message);\n    const encMsg = aesEncrypt(hashMsg, messagePassword);\n    await createCapsule(beneficiary, date, getPeriodSize(distributionFrequency), periodType === \"immediate\" ? 1 : Number(distributionPeriods), _assets, addingAssetsAllowed === \"yes\", encMsg);\n    console.log(\"create:\", encMsg);\n    gtag(\"event\", \"created\");\n    gtag(\"event\", \"conversion\");\n    setComplete(true);\n  };\n\n  const isValid = () => !addressError && !distributionPeriodsError && !distributionDateError && !messageError && !messageCopyError;\n\n  const validate = () => {\n    const dateValid = validateDate(distributionDate);\n    const addressValid = validateAddress(beneficiary);\n    const messageValid = validateMessage(message);\n    const messagePasswordValid = validatePassword(messagePassword);\n    const periodsValid = periodType === \"immediate\" ? true : validatePeriods(distributionPeriods);\n    return dateValid && addressValid && messageValid && messagePasswordValid && periodsValid;\n  };\n\n  const validateDate = value => {\n    try {\n      const lDt = value.split(\" \");\n      const value_d = lDt[0];\n      const items = value_d.split(\"/\");\n      const time = lDt.length > 1 ? lDt[1].split(\":\") : [\"00\", \"00\", \"00\"];\n      const newDate = new Date(`${items[0]}/${items[1]}/${items[2]} ${time[0]}:${time[1]}:${time[2]}`);\n      const now = new Date();\n      if (items.length !== 3 || time.length !== 3) setDistributionDateError(\"Incorrect Date format: \" + `${items[0]}/${items[1]}/${items[2]} ${time[0]}:${time[1]}:${time[2]}`);else if (newDate < now) setDistributionDateError(\"Date must be in future: \" + `${items[0]}/${items[1]}/${items[2]} ${time[0]}:${time[1]}:${time[2]}`);else {\n        setDistributionDateError(\"\");\n        return true;\n      }\n    } catch {\n      setDistributionDateError(\"Incorrect Date format\");\n    }\n\n    return false;\n  };\n\n  const validateAddress = value => {\n    if (value.length !== 42) setAddressError(\"Invalid Address\");else {\n      setAddressError(\"\");\n      return true;\n    }\n    return false;\n  };\n\n  const validateMessage = value => {\n    const encValue = escape(value);\n    if (encValue.length > 100) setMessageError(\"Too Long\");else if (unescape(encValue) !== value) setMessageError(\"Cannot be Encoded by Unicode\");else {\n      setMessageError(\"\");\n      return true;\n    }\n    return false;\n  };\n\n  const validatePassword = value => {\n    if (message.length > 0 && value.length !== 32) setMessageCopyError(\"Please Push the Copy Button Under the Message Box\");else {\n      setMessageCopyError(\"\");\n      return true;\n    }\n    return false;\n  };\n\n  const validatePeriods = value => {\n    let periods = 0;\n\n    try {\n      periods = Number(value);\n      if (periods <= 0) setDistributionPeriodsError(\"Periods must be a positive number\");else if (periods === 1) setDistributionPeriodsError(\"For only one period, use an Immediate Capsule\");else {\n        setDistributionPeriodsError(\"\");\n        return true;\n      }\n    } catch {\n      setDistributionPeriodsError(\"Invalid Number\");\n    }\n\n    return false;\n  };\n\n  const randomString = len => {\n    const chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n    const maxPos = chars.length;\n    let pwd = \"\";\n\n    for (let i = 0; i < len; i++) {\n      pwd += chars.charAt(Math.floor(Math.random() * maxPos));\n    }\n\n    return pwd;\n  };\n\n  const copyMessagePassword = () => {\n    const currMessagePassword = randomString(32);\n    setMessagePassword(currMessagePassword);\n\n    if (copy(currMessagePassword)) {\n      console.log(\"Password Copied\");\n      setMessagePasswordCopyState(true);\n      validatePassword(currMessagePassword);\n      return true;\n    }\n\n    setMessagePasswordCopyState(false);\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      show: !complete,\n      close: props.close,\n      header: \"Create Vault\",\n      content: /*#__PURE__*/_jsxDEV(Content, {\n        children: [/*#__PURE__*/_jsxDEV(Selector, {\n          options: [\"immediate\", \"staggered\"],\n          activeOption: periodType,\n          setOption: option => {\n            setPeriodType(option);\n            setDistributionPeriodsError(\"\");\n          },\n          label: \"Distribution Type\",\n          tooltip: \"An Immediate Capsule will open completely on the distribution date, allowing all crypto to be accessed at once. A Staggered Capsule will first open on the Distribution Start Date for a portion of the crypto, and more crypto will become accessible at the defined intervals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: periodType === \"immediate\" ? \"Distribution Date\" : \"Distribution Start Date\",\n          placeholder: \"yyyy/mm/dd HH:MM:SS\",\n          tooltip: periodType === \"immediate\" ? \"This is the date when the capsule will be able to be opened\" : \"This is the date when the capsule will first be able to be opened\",\n          value: distributionDate,\n          setValue: value => {\n            validateDate(value);\n            setDistributionDate(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), distributionDateError && /*#__PURE__*/_jsxDEV(ValidationError, {\n          children: distributionDateError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this), periodType === \"staggered\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            label: \"Distribution Frequency\",\n            tooltip: \"How often the crypto should be distributed to the beneficiary after the capsule is opened\",\n            options: [\"daily\", \"weekly\", \"monthly\", \"annually\"],\n            activeOption: distributionFrequency,\n            setOption: option => setDistributionFrequency(option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            label: \"Distribution Periods\",\n            placeholder: \"e.g. 12\",\n            tooltip: \"How many periods the crypto should be spread out over for the staggerd distribution\",\n            value: distributionPeriods,\n            setValue: value => {\n              validatePeriods(value);\n              setDistributionPeriods(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 17\n          }, this), distributionPeriodsError && /*#__PURE__*/_jsxDEV(ValidationError, {\n            children: distributionPeriodsError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Beneficiary\",\n          placeholder: \"e.g. 0x07d48BDBA7975f0DAF73BD5b85A2E3Ff87ffb24e\",\n          tooltip: \"This is the wallet address that your crypto will be sent to on the distribution date\",\n          value: beneficiary,\n          setValue: value => {\n            validateAddress(value);\n            setBeneficiary(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), addressError && /*#__PURE__*/_jsxDEV(ValidationError, {\n          children: addressError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          label: \"Message\",\n          placeholder: \"Hello!\",\n          tooltip: \"This is the message you send to your beneficiary. It can only be seen after the Capsule is unlocked and the password below is input.\",\n          value: message,\n          setValue: value => {\n            validateMessage(value);\n            setMessage(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), messageError && /*#__PURE__*/_jsxDEV(ValidationError, {\n          children: messageError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 30\n        }, this), messageCopyError && /*#__PURE__*/_jsxDEV(ValidationError, {\n          children: messageCopyError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            small: true,\n            disabled: message.length === 0,\n            text: message.length === 0 ? \"No Message Attached\" : messagePasswordCopyState ? \"Message Password Copied\" : \"Copy Message Password\",\n            click: () => copyMessagePassword()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Selector, {\n          options: [\"yes\", \"no\"],\n          activeOption: addingAssetsAllowed,\n          setOption: option => setAddingAssetsAllowed(option),\n          label: \"Adding Assets Allowed\",\n          tooltip: \"Controls if you are able to continue to add assets to the capsule after it has been created. 'Yes' will mean you can keep adding assets after it has been created. 'No' means that you can only add assets once when it is created.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Assets, {\n          assets: assets,\n          setAssets: assets => {\n            setAssets(assets);\n            updateApprovals(assets);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this),\n      buttonText: unapproved.length === 0 ? \"Create\" : `Approve ${addressSymbol(unapproved[0].asset.token)}`,\n      buttonAction: () => {\n        if (unapproved.length === 0) create();else tokenApprove(unapproved[0].asset.token);\n      },\n      loading: loading,\n      buttonDisabled: !isValid()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      show: complete,\n      close: props.close,\n      header: \"Capsule Created!\",\n      image: lockedCapsule,\n      body: \"Click below to view your capsule\",\n      buttonText: \"View Capsule\",\n      buttonAction: () => history.push(\"/sent\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CreateCapsule, \"Px3A0iC0ecAlcDVTmLdgU6lRXQs=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c3 = CreateCapsule;\nexport default CreateCapsule;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"ButtonContainer\");\n$RefreshReg$(_c3, \"CreateCapsule\");","map":{"version":3,"sources":["/Users/richard/Documents/GitHub/time_capsule/client/src/components/CreateCapsule.tsx"],"names":["React","useState","crypto","copy","BN","useSelector","styled","useHistory","gtag","lockedCapsule","createCapsule","getAssetLongValue","getTokenContract","tokenApproved","getPeriodSize","inputToDate","selectTokens","Assets","TextInput","Popup","ValidationError","Selector","Dropdown","getGlobals","Button","Content","div","ButtonContainer","CreateCapsule","props","show","history","ethAsset","token","value","approval","asset","approved","loading","setLoading","complete","setComplete","messagePasswordCopyState","setMessagePasswordCopyState","beneficiary","setBeneficiary","message","setMessage","distributionDate","setDistributionDate","messagePassword","setMessagePassword","periodType","setPeriodType","distributionFrequency","setDistributionFrequency","distributionPeriods","setDistributionPeriods","distributionDateError","setDistributionDateError","addingAssetsAllowed","setAddingAssetsAllowed","addressError","setAddressError","messageError","setMessageError","messageCopyError","setMessageCopyError","distributionPeriodsError","setDistributionPeriodsError","assets","setAssets","approvals","setApprovals","tokens","unapproved","filter","a","addressSymbol","address","symbol","updateApprovals","_approvals","promises","map","push","Promise","all","tokenApprove","globals","tokenContract","methods","approve","CAPSULE","send","on","hash","receipt","err","console","log","aesEncrypt","key","encValue","escape","cipher","createCipheriv","slice","crypted","update","final","getMD5","createHash","digest","create","validate","_assets","Number","parseFloat","date","sigMsg","concat","hashMsg","encMsg","isValid","dateValid","validateDate","addressValid","validateAddress","messageValid","validateMessage","messagePasswordValid","validatePassword","periodsValid","validatePeriods","lDt","split","value_d","items","time","length","newDate","Date","now","unescape","periods","randomString","len","chars","maxPos","pwd","i","charAt","Math","floor","random","copyMessagePassword","currMessagePassword","close","option"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport crypto from \"crypto\";\nimport copy from \"copy-to-clipboard\";\nimport BN from \"bn.js\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { gtag } from \"@deptno/gtag\";\nimport lockedCapsule from \"../assets/capsule-locked-large.png\";\n\nimport {\n  createCapsule,\n  getAssetLongValue,\n  getTokenContract,\n  tokenApproved,\n} from \"../services/contracthelper\";\nimport { getPeriodSize, inputToDate } from \"../services/dateHelper\";\nimport { selectTokens } from \"../state/tokenSlice\";\nimport { Asset } from \"../types/CapsuleType\";\nimport Token from \"../types/Token\";\nimport Assets from \"./Assets\";\nimport TextInput from \"./TextInput\";\nimport Popup from \"./Popup\";\nimport { ValidationError } from \"../styles/ValidationError\";\nimport Selector from \"./Selector\";\nimport Dropdown from \"./Dropdown\";\nimport { getGlobals } from \"../utils/globals\";\nimport Button from \"./Button\";\n\ntype Approval = {\n  asset: Asset;\n  approved: boolean;\n};\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 2rem;\n  display: flex;\n\n  button {\n    margin: 0 1rem;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n\n    button {\n      margin: 1rem 0;\n    }\n  }\n`;\n\ntype Props = {\n  show: boolean;\n  close: () => void;\n};\n\nconst CreateCapsule = (props: Props): JSX.Element => {\n  if (!props.show) return <></>;\n\n  const history = useHistory();\n\n  const ethAsset: Asset = { token: \"ETH\", value: \"0\" };\n  const approval: Approval = { asset: ethAsset, approved: true };\n\n  const [loading, setLoading] = useState(false);\n  const [complete, setComplete] = useState(false);\n  const [messagePasswordCopyState, setMessagePasswordCopyState] = useState(\n    false\n  );\n  const [beneficiary, setBeneficiary] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [distributionDate, setDistributionDate] = useState(\"\");\n  const [messagePassword, setMessagePassword] = useState(\"\");\n  const [periodType, setPeriodType] = useState(\"immediate\");\n  const [distributionFrequency, setDistributionFrequency] = useState(\"monthly\");\n  const [distributionPeriods, setDistributionPeriods] = useState(\"\");\n  const [distributionDateError, setDistributionDateError] = useState(\"\");\n  const [addingAssetsAllowed, setAddingAssetsAllowed] = useState(\"yes\");\n  const [addressError, setAddressError] = useState(\"\");\n  const [messageError, setMessageError] = useState(\"\");\n  const [messageCopyError, setMessageCopyError] = useState(\"\");\n  const [distributionPeriodsError, setDistributionPeriodsError] = useState(\"\");\n  const [assets, setAssets] = useState<Asset[]>([ethAsset]);\n  const [approvals, setApprovals] = useState<Approval[]>([approval]);\n\n  const tokens = useSelector(selectTokens);\n\n  const unapproved = approvals.filter((a: Approval) => !a.approved);\n\n  const addressSymbol = (address: string) =>\n    tokens.filter((token: Token) => token.address === address)[0].symbol;\n\n  const updateApprovals = async (assets: Asset[]) => {\n    const _approvals: Approval[] = [];\n    const promises = assets.map(async (asset: Asset) => {\n      _approvals.push({\n        asset,\n        approved: await tokenApproved(asset.token),\n      });\n    });\n    await Promise.all(promises);\n    setApprovals(_approvals);\n  };\n\n  const tokenApprove = async (address: string) => {\n    const globals = await getGlobals();\n    const tokenContract = await getTokenContract(address);\n    tokenContract.methods\n      .approve(globals.CAPSULE, new BN(\"9999999999999999999999999999\"))\n      .send()\n      .on(\"transactionHash\", (hash: any) => {\n        setLoading(true);\n      })\n      .on(\"receipt\", async (receipt: any) => {\n        await updateApprovals(assets);\n        setLoading(false);\n      })\n      .on(\"error\", (err: any) => {\n        console.log(`Error: ${err}`);\n        setLoading(false);\n      });\n  };\n\n  const aesEncrypt = (value: string, key: string): string => {\n    if (value === \"\") return \"\";\n    const encValue = escape(value);\n    const cipher = crypto.createCipheriv(\n      \"aes-128-cbc\",\n      key.slice(0, 16),\n      key.slice(16)\n    );\n    let crypted = cipher.update(encValue, \"utf8\", \"hex\");\n    crypted += cipher.final(\"hex\");\n    return crypted;\n  };\n\n  const getMD5 = (value: string): string => {\n    const hash = crypto.createHash(\"md5\");\n    hash.update(value);\n    return hash.digest(\"hex\"); // 7e1977739c748beac0c0fd14fd26a544\n  };\n\n  const create = async () => {\n    if (!validate()) return;\n\n    setLoading(true);\n\n    const _assets: Asset[] = [];\n\n    const promises: Promise<void>[] = assets.map(async (asset: Asset) => {\n      _assets.push({\n        token: asset.token,\n        value: await getAssetLongValue(\n          Number.parseFloat(asset.value),\n          asset.token\n        ),\n      });\n    });\n\n    await Promise.all(promises);\n\n    const date = inputToDate(distributionDate);\n    const sigMsg = message === \"\" ? \"\" : \"PF:\".concat(message);\n    const hashMsg = sigMsg === \"\" ? \"\" : getMD5(sigMsg).concat(message);\n    const encMsg = aesEncrypt(hashMsg, messagePassword);\n\n    await createCapsule(\n      beneficiary,\n      date,\n      getPeriodSize(distributionFrequency),\n      periodType === \"immediate\" ? 1 : Number(distributionPeriods),\n      _assets,\n      addingAssetsAllowed === \"yes\",\n      encMsg\n    );\n\n    console.log(\"create:\", encMsg);\n\n    gtag(\"event\", \"created\");\n    gtag(\"event\", \"conversion\");\n    setComplete(true);\n  };\n\n  const isValid = (): boolean =>\n    !addressError &&\n    !distributionPeriodsError &&\n    !distributionDateError &&\n    !messageError &&\n    !messageCopyError;\n\n  const validate = (): boolean => {\n    const dateValid = validateDate(distributionDate);\n    const addressValid = validateAddress(beneficiary);\n    const messageValid = validateMessage(message);\n    const messagePasswordValid = validatePassword(messagePassword);\n    const periodsValid =\n      periodType === \"immediate\" ? true : validatePeriods(distributionPeriods);\n    return (\n      dateValid &&\n      addressValid &&\n      messageValid &&\n      messagePasswordValid &&\n      periodsValid\n    );\n  };\n\n  const validateDate = (value: string): boolean => {\n    try {\n      const lDt = value.split(\" \");\n      const value_d = lDt[0];\n      const items = value_d.split(\"/\");\n      const time = lDt.length > 1 ? lDt[1].split(\":\") : [\"00\", \"00\", \"00\"];\n      const newDate = new Date(\n        `${items[0]}/${items[1]}/${items[2]} ${time[0]}:${time[1]}:${time[2]}`\n      );\n      const now = new Date();\n      if (items.length !== 3 || time.length !== 3)\n        setDistributionDateError(\n          \"Incorrect Date format: \" +\n            `${items[0]}/${items[1]}/${items[2]} ${time[0]}:${time[1]}:${time[2]}`\n        );\n      else if (newDate < now)\n        setDistributionDateError(\n          \"Date must be in future: \" +\n            `${items[0]}/${items[1]}/${items[2]} ${time[0]}:${time[1]}:${time[2]}`\n        );\n      else {\n        setDistributionDateError(\"\");\n        return true;\n      }\n    } catch {\n      setDistributionDateError(\"Incorrect Date format\");\n    }\n    return false;\n  };\n\n  const validateAddress = (value: string): boolean => {\n    if (value.length !== 42) setAddressError(\"Invalid Address\");\n    else {\n      setAddressError(\"\");\n      return true;\n    }\n    return false;\n  };\n\n  const validateMessage = (value: string): boolean => {\n    const encValue = escape(value);\n    if (encValue.length > 100) setMessageError(\"Too Long\");\n    else if (unescape(encValue) !== value)\n      setMessageError(\"Cannot be Encoded by Unicode\");\n    else {\n      setMessageError(\"\");\n      return true;\n    }\n    return false;\n  };\n\n  const validatePassword = (value: string): boolean => {\n    if (message.length > 0 && value.length !== 32)\n      setMessageCopyError(\"Please Push the Copy Button Under the Message Box\");\n    else {\n      setMessageCopyError(\"\");\n      return true;\n    }\n    return false;\n  };\n\n  const validatePeriods = (value: string): boolean => {\n    let periods = 0;\n    try {\n      periods = Number(value);\n      if (periods <= 0)\n        setDistributionPeriodsError(\"Periods must be a positive number\");\n      else if (periods === 1)\n        setDistributionPeriodsError(\n          \"For only one period, use an Immediate Capsule\"\n        );\n      else {\n        setDistributionPeriodsError(\"\");\n        return true;\n      }\n    } catch {\n      setDistributionPeriodsError(\"Invalid Number\");\n    }\n    return false;\n  };\n\n  const randomString = (len: number): string => {\n    const chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n    const maxPos = chars.length;\n    let pwd = \"\";\n    for (let i = 0; i < len; i++) {\n      pwd += chars.charAt(Math.floor(Math.random() * maxPos));\n    }\n    return pwd;\n  };\n\n  const copyMessagePassword = (): boolean => {\n    const currMessagePassword = randomString(32);\n    setMessagePassword(currMessagePassword);\n    if (copy(currMessagePassword)) {\n      console.log(\"Password Copied\");\n      setMessagePasswordCopyState(true);\n      validatePassword(currMessagePassword);\n      return true;\n    }\n    setMessagePasswordCopyState(false);\n    return false;\n  };\n\n  return (\n    <>\n      <Popup\n        show={!complete}\n        close={props.close}\n        header=\"Create Vault\"\n        content={\n          <Content>\n            <Selector\n              options={[\"immediate\", \"staggered\"]}\n              activeOption={periodType}\n              setOption={(option: string) => {\n                setPeriodType(option);\n                setDistributionPeriodsError(\"\");\n              }}\n              label=\"Distribution Type\"\n              tooltip=\"An Immediate Capsule will open completely on the distribution date, allowing all crypto to be accessed at once. A Staggered Capsule will first open on the Distribution Start Date for a portion of the crypto, and more crypto will become accessible at the defined intervals\"\n            />\n            <TextInput\n              label={\n                periodType === \"immediate\"\n                  ? \"Distribution Date\"\n                  : \"Distribution Start Date\"\n              }\n              placeholder=\"yyyy/mm/dd HH:MM:SS\"\n              tooltip={\n                periodType === \"immediate\"\n                  ? \"This is the date when the capsule will be able to be opened\"\n                  : \"This is the date when the capsule will first be able to be opened\"\n              }\n              value={distributionDate}\n              setValue={(value: string) => {\n                validateDate(value);\n                setDistributionDate(value);\n              }}\n            />\n            {distributionDateError && (\n              <ValidationError>{distributionDateError}</ValidationError>\n            )}\n            {periodType === \"staggered\" && (\n              <>\n                <Dropdown\n                  label=\"Distribution Frequency\"\n                  tooltip=\"How often the crypto should be distributed to the beneficiary after the capsule is opened\"\n                  options={[\"daily\", \"weekly\", \"monthly\", \"annually\"]}\n                  activeOption={distributionFrequency}\n                  setOption={(option: string) =>\n                    setDistributionFrequency(option)\n                  }\n                />\n                <TextInput\n                  label=\"Distribution Periods\"\n                  placeholder=\"e.g. 12\"\n                  tooltip=\"How many periods the crypto should be spread out over for the staggerd distribution\"\n                  value={distributionPeriods}\n                  setValue={(value: string) => {\n                    validatePeriods(value);\n                    setDistributionPeriods(value);\n                  }}\n                />\n                {distributionPeriodsError && (\n                  <ValidationError>{distributionPeriodsError}</ValidationError>\n                )}\n              </>\n            )}\n            <TextInput\n              label=\"Beneficiary\"\n              placeholder=\"e.g. 0x07d48BDBA7975f0DAF73BD5b85A2E3Ff87ffb24e\"\n              tooltip=\"This is the wallet address that your crypto will be sent to on the distribution date\"\n              value={beneficiary}\n              setValue={(value: string) => {\n                validateAddress(value);\n                setBeneficiary(value);\n              }}\n            />\n            {addressError && <ValidationError>{addressError}</ValidationError>}\n            <TextInput\n              label=\"Message\"\n              placeholder=\"Hello!\"\n              tooltip=\"This is the message you send to your beneficiary. It can only be seen after the Capsule is unlocked and the password below is input.\"\n              value={message}\n              setValue={(value: string) => {\n                validateMessage(value);\n                setMessage(value);\n              }}\n            />\n            {messageError && <ValidationError>{messageError}</ValidationError>}\n            {messageCopyError && (\n              <ValidationError>{messageCopyError}</ValidationError>\n            )}\n            <ButtonContainer>\n              <Button\n                small\n                disabled={message.length === 0}\n                text={\n                  message.length === 0\n                    ? \"No Message Attached\"\n                    : messagePasswordCopyState\n                    ? \"Message Password Copied\"\n                    : \"Copy Message Password\"\n                }\n                click={() => copyMessagePassword()}\n              />\n            </ButtonContainer>\n            <Selector\n              options={[\"yes\", \"no\"]}\n              activeOption={addingAssetsAllowed}\n              setOption={(option: string) => setAddingAssetsAllowed(option)}\n              label=\"Adding Assets Allowed\"\n              tooltip=\"Controls if you are able to continue to add assets to the capsule after it has been created. 'Yes' will mean you can keep adding assets after it has been created. 'No' means that you can only add assets once when it is created.\"\n            />\n            <Assets\n              assets={assets}\n              setAssets={(assets: Asset[]) => {\n                setAssets(assets);\n                updateApprovals(assets);\n              }}\n            />\n          </Content>\n        }\n        buttonText={\n          unapproved.length === 0\n            ? \"Create\"\n            : `Approve ${addressSymbol(unapproved[0].asset.token)}`\n        }\n        buttonAction={() => {\n          if (unapproved.length === 0) create();\n          else tokenApprove(unapproved[0].asset.token);\n        }}\n        loading={loading}\n        buttonDisabled={!isValid()}\n      />\n      <Popup\n        show={complete}\n        close={props.close}\n        header=\"Capsule Created!\"\n        image={lockedCapsule}\n        body=\"Click below to view your capsule\"\n        buttonText=\"View Capsule\"\n        buttonAction={() => history.push(\"/sent\")}\n      />\n    </>\n  );\n};\n\nexport default CreateCapsule;\n"]},"metadata":{},"sourceType":"module"}